<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Game 2020</title>
  
  <subtitle>https://2020.iosdevlog.com</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://2020.iosdevlog.com/"/>
  <updated>2020-01-12T14:10:41.168Z</updated>
  <id>https://2020.iosdevlog.com/</id>
  
  <author>
    <name>iOSDevLog</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《祈祷落幕时》人物关系图</title>
    <link href="https://2020.iosdevlog.com/2020/01/12/9787544274692/"/>
    <id>https://2020.iosdevlog.com/2020/01/12/9787544274692/</id>
    <published>2020-01-12T13:02:40.000Z</published>
    <updated>2020-01-12T14:10:41.168Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/01/12/9787544274692/9787544274692.png" class="" title="东野圭吾-《祈祷落幕时》"><a id="more"></a><p>祈祷落幕时 </p><p>作者: (日)东野圭吾<br>出版社: 南海出版公司<br>原作名: 祈りの幕が下りる时<br>译者: 代珂<br>出版年: 2015-1<br>页数: 296<br>定价: 39.50元<br>装帧: 精装<br>丛书: 新经典文库·东野圭吾作品<br>ISBN: 9787544274692</p><p>两个离异家庭，一个父亲为了女儿，杀了两个无辜的人。</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2020/01/12/9787544274692/9787544274692.png&quot; class=&quot;&quot; title=&quot;东野圭吾-《祈祷落幕时》&quot;&gt;
    
    </summary>
    
    
      <category term="读书" scheme="https://2020.iosdevlog.com/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="东野圭吾" scheme="https://2020.iosdevlog.com/tags/%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE/"/>
    
      <category term="加贺" scheme="https://2020.iosdevlog.com/tags/%E5%8A%A0%E8%B4%BA/"/>
    
  </entry>
  
  <entry>
    <title>游戏热点剖析</title>
    <link href="https://2020.iosdevlog.com/2020/01/12/hot/"/>
    <id>https://2020.iosdevlog.com/2020/01/12/hot/</id>
    <published>2020-01-12T12:57:16.000Z</published>
    <updated>2020-01-12T14:08:47.826Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/01/12/hot/%E5%BC%95%E6%93%8E.jpg" class="" title="引擎"><a id="more"></a><h2 id="HTML5技术是如何取代Flash的？"><a href="#HTML5技术是如何取代Flash的？" class="headerlink" title="HTML5技术是如何取代Flash的？"></a>HTML5技术是如何取代Flash的？</h2><ul><li>H5 游戏拥有比 Flash 更好用更开放的规范，开发和发布也更方便，修改代码后放到网上，只需要刷新一下页面就可以看到修改的内容</li><li>另外，Flash 技术需要安装一个插件，而 H5 技术直接在浏览器就可以呈现。所以 H5 技术完全替代 Flash 只是时间问题</li></ul><h2 id="如何选择一款HTML5引擎？"><a href="#如何选择一款HTML5引擎？" class="headerlink" title="如何选择一款HTML5引擎？"></a>如何选择一款HTML5引擎？</h2><ul><li>如果美术熟悉 Cocos2d-JS，或者想要快速上手 2D 游戏，可以选择 Cocos2d-JS</li><li>如果对编程不太熟练，可以选择 Construct 2</li><li>如果是拥有完整流程的开发公司，Cocos2d-JS 和白鹭都可以选择</li></ul><h2 id="试试看，你也可以编写一款HTML5小游戏！"><a href="#试试看，你也可以编写一款HTML5小游戏！" class="headerlink" title="试试看，你也可以编写一款HTML5小游戏！"></a>试试看，你也可以编写一款HTML5小游戏！</h2><p><code>lufylegend</code></p><h2 id="安卓端和苹果端游戏开发有什么区别？"><a href="#安卓端和苹果端游戏开发有什么区别？" class="headerlink" title="安卓端和苹果端游戏开发有什么区别？"></a>安卓端和苹果端游戏开发有什么区别？</h2><ul><li>从游戏角度讲，手机、掌上游戏机、iPad 都属于移动端设备。而进入智能机时代之后，掌上游戏机逐渐退居幕后，成为少部分游戏发烧友的选择。</li><li>安卓端和苹果端在开发游戏中的区别，主要体现在开发语言上。苹果系统大量使用 Objective-C、Swift，而安卓大量使用的是 Java。</li><li>苹果端的比较流行的引擎 SpriteKit 以及适用于各种平台的 libGDX。使用 libGDX 在各个平台编写出的游戏，表现几乎是一样的，除了执行效率或者耗电水平会有细微的差别，但这和引擎其实关系不大。</li></ul><h2 id="如何选择移动端的游戏引擎？"><a href="#如何选择移动端的游戏引擎？" class="headerlink" title="如何选择移动端的游戏引擎？"></a>如何选择移动端的游戏引擎？</h2><p>我决定用 Godot。</p><h2 id="AR和人工智能在游戏领域有哪些应用？"><a href="#AR和人工智能在游戏领域有哪些应用？" class="headerlink" title="AR和人工智能在游戏领域有哪些应用？"></a>AR和人工智能在游戏领域有哪些应用？</h2><ul><li><code>VR</code>：虚拟现实（Virual Reality ）</li><li><code>AR</code>：增强现实（Augmented Reality）</li><li><code>MR</code>：混合现实（Mixed Reality）</li><li><code>SLAM</code>：同时定位与映射（Simultaneously Localization And Mapping）</li></ul><h2 id="谈谈微信小游戏的成功点"><a href="#谈谈微信小游戏的成功点" class="headerlink" title="谈谈微信小游戏的成功点"></a>谈谈微信小游戏的成功点</h2><ul><li>微信小游戏、小程序都是基于 HTML5 技术的，而微信小游戏的技术就是 HTML5 技术，只是在小游戏中运用的框架并不是普通的 HTML5 的框架。</li><li>微信小程序用的是基于 WebView 的技术；小游戏却没有用到 WebView 技术，而是修改了 HTML5 规范的一些接口内容，成为腾讯自己的内容。</li><li>微信平台之所以要自定义自己的一套体系，比如 Web 标准、开发标准等等，是因为可以结合微信本身的特性，在此基础上制作出更契合腾讯生态的产品，一句话就是，为了方便自己开发、优化和管理。</li><li>微信小游戏基于微信的底层获取功能、广告接入优势和打击拷贝的能力，塑造了一个更好的微信小程序生态。</li></ul><h2 id="谈谈移动游戏的未来发展"><a href="#谈谈移动游戏的未来发展" class="headerlink" title="谈谈移动游戏的未来发展"></a>谈谈移动游戏的未来发展</h2><ul><li>移动端游戏将往更加精品、高画质、高品位的游戏转型。3D、VR、AR 等游戏也会层出不穷，移动端和大屏幕之间的阻隔也会逐渐模糊，两边都可以互相游戏。</li><li>如果摆脱了电池的掣肘，那么移动端游戏将往 PC 端游戏的方向发展，更高质量的 3D 游戏也不用担心电池耗尽而半途无法玩了。</li></ul><h2 id="谈谈独立开发者的未来发展"><a href="#谈谈独立开发者的未来发展" class="headerlink" title="谈谈独立开发者的未来发展"></a>谈谈独立开发者的未来发展</h2><p>职责</p><ul><li><p>策划</p></li><li><p>美工</p></li><li><p>原画</p></li><li><p>推广</p></li><li><p>DOS 时代的时候，一个人或者一个小团队就可以做出一款游戏，但是这种时代已经过去了。游戏开发难度变小了，但是游戏制作难度变得越来越大了。</p></li><li><p>尽管 Steam 依旧是目前最大的发布平台，但是由于它本身没有对上架的游戏进行分类、整理，有选择的展示。对独立开发者其实是不利的。加上 Switch、XBOX 等主机游戏相继都推出了自己的独立游戏计划，我其实更看好主机游戏的发展。</p></li><li><p>其实不管基于什么平台，把游戏本身做好，才是最重要的。</p></li></ul><p>参考：<a href="https://time.geekbang.org/column/intro/87" target="_blank" rel="noopener">从0开始学游戏开发</a></p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2020/01/12/hot/%E5%BC%95%E6%93%8E.jpg&quot; class=&quot;&quot; title=&quot;引擎&quot;&gt;
    
    </summary>
    
    
      <category term="game" scheme="https://2020.iosdevlog.com/categories/game/"/>
    
    
      <category term="热点" scheme="https://2020.iosdevlog.com/tags/%E7%83%AD%E7%82%B9/"/>
    
      <category term="AR" scheme="https://2020.iosdevlog.com/tags/AR/"/>
    
      <category term="VR" scheme="https://2020.iosdevlog.com/tags/VR/"/>
    
  </entry>
  
  <entry>
    <title>服务器开发</title>
    <link href="https://2020.iosdevlog.com/2020/01/11/Server-Development/"/>
    <id>https://2020.iosdevlog.com/2020/01/11/Server-Development/</id>
    <published>2020-01-11T10:51:36.000Z</published>
    <updated>2020-01-11T11:34:19.052Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-01.png" alt="2020/01/01"></p><a id="more"></a><h2 id="如何选择合适的开发语言？"><a href="#如何选择合适的开发语言？" class="headerlink" title="如何选择合适的开发语言？"></a>如何选择合适的开发语言？</h2><ol><li>系统级编程语言，诸如汇编、C、C++<ul><li>这种编程语言执行效率快，并发量也比较高，作为编写网络服务的第一语言，一台服务器就能支撑许多人。缺点是开发效率不够高，需要几年以上经验的程序员才能搞定。</li></ul></li><li>专门为网络服务器开发的语言，诸如 Go、Erlang<ul><li>这种语言编写高并发和开发效率都不是问题，有很好的折中效果。缺点就是语言比较新，有许多的坑等着后来的程序员去填，而且语言、语法等系统机制要随着进一步的发展才能稳定下来。</li></ul></li><li>解释型脚本语言，诸如 Python、Ruby。<ul><li>这类语言的开发效率非常高效，在现在的服务器硬件上，也能支撑不少用户，但是唯一的缺点是，运行效率低下。虽然也有解决方案，但仍然不能对抗高性能的系统编程语言和专业网络开发的语言。如何选择一种合适的语言来编写网络服务？</li></ul></li></ol><h3 id="网络服务"><a href="#网络服务" class="headerlink" title="网络服务"></a>网络服务</h3><ul><li>Web 服务</li><li>Socket 服务</li><li>混合模式</li></ul><h2 id="如何定制合适的开发协议？"><a href="#如何定制合适的开发协议？" class="headerlink" title="如何定制合适的开发协议？"></a>如何定制合适的开发协议？</h2><p><code>一种客户端和服务器端的网络沟通协议（Protocol）。</code></p><h3 id="三种最流行的开发协议"><a href="#三种最流行的开发协议" class="headerlink" title="三种最流行的开发协议"></a>三种最流行的开发协议</h3><ol><li>XML<ol><li>PULL 方式：专门为安卓设备解析 XML 文件设计的解析方式</li><li>SAX 方式：SAX（Simple API for XML）采用事件驱动型方式</li><li>DOM 方式：DOM（Document Object Model）是最传统的解析方式</li></ol></li><li>JSON</li><li>ProtoBuf<ol><li>Google Protocol Buffer</li><li>ProtoBuf 适合用作数据存储或 RPC 数据交换格式，缺点是保存比较麻烦，但是总体来讲还是比较方便的</li></ol></li></ol><h3 id="自己定义协议"><a href="#自己定义协议" class="headerlink" title="自己定义协议"></a>自己定义协议</h3><p>自己定义协议包需要考虑完整性和安全性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[协议头][协议体][协议结尾分隔符]</span><br></pre></td></tr></table></figure><p>接收方需要知道协议的长度，或者知道协议的尾部在哪里，就可以保证协议包的完整性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[协议长度2字节][协议体]</span><br></pre></td></tr></table></figure><p>而最直接的给协议包加密，就可以保证安全性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[协议长度2字节][加密协议体]</span><br></pre></td></tr></table></figure><h2 id="不可忽视的多线程及并发问题"><a href="#不可忽视的多线程及并发问题" class="headerlink" title="不可忽视的多线程及并发问题"></a>不可忽视的多线程及并发问题</h2><ol><li><code>并发</code> 是单个 CPU 之间切换多线程任务的操作</li><li><code>并行</code> 是多个 CPU 同时分配和运行多线程任务的操作</li><li><code>线程</code> 是进程内的独立任务单元，但是共享这个进程的所有资源</li></ol><h2 id="如何判断心跳包是否离线？"><a href="#如何判断心跳包是否离线？" class="headerlink" title="如何判断心跳包是否离线？"></a>如何判断心跳包是否离线？</h2><ol><li>判断非阻塞模型的网络是否断开，可以使用心跳包和计算超时的方式进行断开操作，比如 30 秒没收到心跳包，则可以强制关闭 Socket 句柄断开。</li><li>心跳包是一种服务器之间交互的方法，也可以用作服务器数据调试和回滚的策略方案。</li><li>心跳包有两种策略<ol><li>第一种就是运算时间 A 和心跳时间 B 相对固定</li><li>第二种策略是运算时间 A 和心跳时间 B 是实时调整</li></ol></li></ol><p>CPU 的负载很高的时候用策略一，CPU 负载并不是那么严重的情况下，策略二是比较好的选择。</p><h2 id="如何用网关服务器进行负载均衡？"><a href="#如何用网关服务器进行负载均衡？" class="headerlink" title="如何用网关服务器进行负载均衡？"></a>如何用网关服务器进行负载均衡？</h2><p>两种常用的负载均衡技术</p><h3 id="软件模式"><a href="#软件模式" class="headerlink" title="软件模式"></a>软件模式</h3><p>LVS、Nginx、HAProxy。</p><ul><li>LVS 是四层负载均衡，根据目标地址和端口选择内部服务器</li><li>Nginx 这种负载均衡工具是七层负载均衡</li><li>而 HAProxy 同时支持四层、七层负载均衡，还可以根据报文内容选择内部服务器</li></ul><p>因此，LVS 分发路径优于 Nginx 和 HAProxy，性能上也要高些。但 Nginx 和 HAProxy 则更具配置性，比如说可以用来做动静分离。</p><p>所谓动静分离，就是根据请求协议的特征，去选择静态资源服务器还是应用服务器。</p><h3 id="硬件模式"><a href="#硬件模式" class="headerlink" title="硬件模式"></a>硬件模式</h3><p>其中，硬件模式用得比较多的是 F5。</p><p>F5 是 F5 Networks 公司提供的一个负载均衡器专用设备， F5 BIG-IP LTM 的官方名称叫本地流量管理器，可以做 4～7 层负载均衡，具有负载均衡、应用交换、会话交换、状态监控等等全备的强大网络功能。</p><p>F5 硬件负载均衡的优点是，负载均衡能直接通过智能交换机实现, 处理能力更强，与操作系统无关，负载性能强，适用于一大堆设备、大访问量，其缺点也是很明显的，那就是购买成本高，设备的配置冗余，有些用不上的都给默认配置了。</p><p>另外，由于设备只有单个，所以单个负载均衡配置无法有效掌握所有服务器及应用状态。硬件的负载均衡，是从网络层来判断负载规则，所以有时候软件的系统处理能力出现问题，网络硬件还可以作出负载的动作。</p><h3 id="网关服务器有哪些功能？"><a href="#网关服务器有哪些功能？" class="headerlink" title="网关服务器有哪些功能？"></a>网关服务器有哪些功能？</h3><ol><li>中转功能</li><li>负载均衡</li></ol><h2 id="如何制作游戏内容保存和缓存处理？"><a href="#如何制作游戏内容保存和缓存处理？" class="headerlink" title="如何制作游戏内容保存和缓存处理？"></a>如何制作游戏内容保存和缓存处理？</h2><p>Redis 不仅是内存缓存</p><p>Redis 是一种 <code>key-value</code> 型的存储系统。它支持存储的 value 类型很多，包括字符串、链表、集合、有序集合和哈希类型。这些数据类型都支持 push/pop、add/remove 及取交集并集和差集及更丰富的操作，而且这些操作都具有原子性。</p><ul><li>Redis 不仅仅可以用作普通的缓存机制使用，也可以当作正常的数据库使用，Redis 也支持主从同步，要按照应用场景不同来配置不同的 Redis 使用场景。</li><li>缓存机制不仅仅针对读取游戏保存文件这么一种方案，也可以用作各种数据文件的读取和写入操作。</li><li>使用现成的 Redis 等缓存数据软件，是一个好的方案。<br>而设计好的框架、好的缓存机制、好的网络模型，是一款好网游必不可少的条件。</li></ul><p>参考：<a href="https://time.geekbang.org/column/intro/87" target="_blank" rel="noopener">从0开始学游戏开发</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-01.png&quot; alt=&quot;2020/01/01&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="game" scheme="https://2020.iosdevlog.com/categories/game/"/>
    
    
      <category term="Godot" scheme="https://2020.iosdevlog.com/tags/Godot/"/>
    
  </entry>
  
  <entry>
    <title>Lua 脚本语言</title>
    <link href="https://2020.iosdevlog.com/2020/01/10/Script-Language/"/>
    <id>https://2020.iosdevlog.com/2020/01/10/Script-Language/</id>
    <published>2020-01-10T11:07:54.000Z</published>
    <updated>2020-01-10T11:47:37.654Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Lua-logo-nolabel.svg/1200px-Lua-logo-nolabel.svg.png" alt="Lua"></p><a id="more"></a><h2 id="如何嵌入脚本语言"><a href="#如何嵌入脚本语言" class="headerlink" title="如何嵌入脚本语言?"></a>如何嵌入脚本语言?</h2><ol><li>因为 <code>Lua</code> 脚本足够轻量级，几乎没有冗余的代码。Lua 虚拟机的执行效率几乎可以媲美 C/C++ 的执行效率。所以我们选择使用 Lua 脚本来嵌入 C/C++ 硬代码。</li><li>Lua 脚本在 C/C++ 语言里面嵌入，需要先声明一个虚拟机并且赋值给指针。</li><li>Lua 脚本需要先 loadfile 再 pcall 调用脚本文件，loadfile 会检查最基本的脚本文件内容，比如文件是否存在，比如脚本代码是否出错，而 pcall 会在运行时出错的时候将错误压至栈顶。</li><li>Lua 错误会将错误压制栈顶，我们要取出来，需要使用 -1 下标取出栈顶的内容，并转成 string 打印。</li></ol><h2 id="脚本语言在游戏开发中有哪些应用？"><a href="#脚本语言在游戏开发中有哪些应用？" class="headerlink" title="脚本语言在游戏开发中有哪些应用？"></a>脚本语言在游戏开发中有哪些应用？</h2><ul><li>在 Lua 与 C 的结合过程中，C 语言需要新建一个 Lua 虚拟机，然后使用虚拟机的指针来操作 Lua 函数。</li><li>在程序的应用中，使用 C 语言中的一些宏的技巧，可以使代码能够便利地应用在程序里。</li></ul><h2 id="如何使用脚本语言编写周边工具？"><a href="#如何使用脚本语言编写周边工具？" class="headerlink" title="如何使用脚本语言编写周边工具？"></a>如何使用脚本语言编写周边工具？</h2><ol><li><code>利用 C/C++ 语言和 Lua 源代码进行交互，从 Lua 代码中获取数据并且在 C 语言里面进行算法的封装和计算，最后将结果返回给 Lua。</code>我们在 C/C++ 语言里面进行大量的封装和算法提取，并且也利用 C/C++ 进行调用和结果的呈现，这是一种常用的方式，也就是 C 语言占比 60%～70%，Lua 代码占比 30%～40%。</li><li>另一种比较好的方式是，<code>使用 C/C++ 编写底层实现逻辑，随后将数据传输给 Lua，让 Lua 来做逻辑运算，最终将结果返回给 C 语言并且呈现出来。</code>这是很多人在游戏开发中都会做的事情，比如我们编写地图编辑器，先在 Lua 中编写好逻辑，用 C 语言在界面中呈现出来即可。如果反过来做的话，那就会出现大量的硬代码，是很不合适的。所以这种情况下，C 语言占比 30%～40%，Lua 代码占比 60%～70%。</li><li><code>Lua 可以是一种胶水语言。严谨地说，像 Python、Ruby 等脚本语言，都是合格的胶水语言。</code> 在这种情况下，胶水语言起到的作用就是粘合系统语言（C/C++）和上层脚本逻辑。所以，使用胶水语言，就像是一种动态的配置文件。按照普通的配置文件来讲，你需要手工解析比如类似 INI、XML、JSON 等配置文件，随后按照这些文件的内容来做出一系列的配置，但是胶水语言不需要，它本身就是一种动态的语言。</li></ol><p>参考：<a href="https://time.geekbang.org/column/intro/87" target="_blank" rel="noopener">从0开始学游戏开发</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Lua-logo-nolabel.svg/1200px-Lua-logo-nolabel.svg.png&quot; alt=&quot;Lua&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="game" scheme="https://2020.iosdevlog.com/categories/game/"/>
    
    
      <category term="Language" scheme="https://2020.iosdevlog.com/tags/Language/"/>
    
      <category term="Lua" scheme="https://2020.iosdevlog.com/tags/Lua/"/>
    
  </entry>
  
  <entry>
    <title>《变身》人物关系图</title>
    <link href="https://2020.iosdevlog.com/2020/01/09/henshin/"/>
    <id>https://2020.iosdevlog.com/2020/01/09/henshin/</id>
    <published>2020-01-09T13:50:03.000Z</published>
    <updated>2020-01-12T14:11:51.211Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/01/09/henshin/%E5%8F%98%E8%BA%AB.png" class="" title="变身"><a id="more"></a><p>作者:  [日] 东野圭吾<br>出版社: 南海出版社<br>原作名: 変身<br>译者: 赵峻<br>出版年: 2009-07-01<br>页数: 234<br>定价: 22.00元<br>装帧: 平装<br>丛书: 新经典文库·东野圭吾作品<br>ISBN: 9787544244848</p><p>阿纯最后怎么样了？</p><p>看完这部小说，你有什么想说的吗？</p><p>最后附上明天的桌面背景。</p><p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-10.png" alt="2020/01/10"></p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2020/01/09/henshin/%E5%8F%98%E8%BA%AB.png&quot; class=&quot;&quot; title=&quot;变身&quot;&gt;
    
    </summary>
    
    
      <category term="读书" scheme="https://2020.iosdevlog.com/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="东野圭吾" scheme="https://2020.iosdevlog.com/tags/%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE/"/>
    
  </entry>
  
  <entry>
    <title>UI和键盘鼠标</title>
    <link href="https://2020.iosdevlog.com/2020/01/09/UI-Input/"/>
    <id>https://2020.iosdevlog.com/2020/01/09/UI-Input/</id>
    <published>2020-01-09T12:15:02.000Z</published>
    <updated>2020-01-09T13:45:55.870Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-09.png" alt="2020/01/09"></p><a id="more"></a><h2 id="如何在游戏中载入UI和菜单？"><a href="#如何在游戏中载入UI和菜单？" class="headerlink" title="如何在游戏中载入UI和菜单？"></a>如何在游戏中载入UI和菜单？</h2><h3 id="UI-的两种呈现形式"><a href="#UI-的两种呈现形式" class="headerlink" title="UI 的两种呈现形式"></a>UI 的两种呈现形式</h3><ol><li>美术画好 UI 图片，然后直接贴图，用鼠标控制一系列的点击和按下操作</li><li>自己画 UI 界面，比如画一个框，并且在框里面写上文字</li></ol><ul><li>绘制矩形</li><li>绘制字体和字符</li></ul><p>鼠标的操作基本有 3 个值需要控制</p><ul><li>左键</li><li>中键</li><li>右键</li></ul><h2 id="如何用鼠标和键盘来操作游戏？"><a href="#如何用鼠标和键盘来操作游戏？" class="headerlink" title="如何用鼠标和键盘来操作游戏？"></a>如何用鼠标和键盘来操作游戏？</h2><ul><li>首先是键盘事件判断，这里会出现按一下键盘做一下操作的情况，问题出在 KEYDOWN 事件判断上。但是如果你需要一直按键的判断，可以使用 get_pressed 函数。</li><li>组合键可以写在同一个判断下，使用 and 连起来做判断。get_pressed 会返回一个 tuple，里面存放了所有的 key 值，只要判断 key 值是不是为 True 就是判断了有没有按键。</li><li>鼠标操作也可以使用 get_pressed 函数，也是返回 tuple，其中下标 0、1、2 分别代表了左、中、右三个按键。</li></ul><h2 id="如何判断客户端的网络连接？"><a href="#如何判断客户端的网络连接？" class="headerlink" title="如何判断客户端的网络连接？"></a>如何判断客户端的网络连接？</h2><p>OSI 七层模型: <code>巫术忘传会飚鹰</code></p><ul><li><code>应</code>用层</li><li><code>表</code>示层</li><li><code>会</code>话层</li><li><code>传</code>输层</li><li><code>网</code>络层</li><li><code>数</code>据链路层</li><li><code>物</code>理层</li></ul><p>最后附上明天的桌面背景。</p><p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-09.png" alt="2020/01/09"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-09.png&quot; alt=&quot;2020/01/09&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="game" scheme="https://2020.iosdevlog.com/categories/game/"/>
    
    
      <category term="Godot" scheme="https://2020.iosdevlog.com/tags/Godot/"/>
    
  </entry>
  
  <entry>
    <title>《刻意练习-如何从新手到大师》</title>
    <link href="https://2020.iosdevlog.com/2020/01/08/PEAK/"/>
    <id>https://2020.iosdevlog.com/2020/01/08/PEAK/</id>
    <published>2020-01-08T13:50:53.000Z</published>
    <updated>2020-01-09T00:41:35.867Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/01/08/PEAK/%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0.jpg" class="" title="刻意练习"><p>作者: [美] 安德斯·艾利克森（Anders Ericsson） / 罗伯特·普尔（Robert Pool）<br>出版社: 机械工业出版社<br>出品方: 华章心理<br>副标题: 如何从新手到大师<br>原作名: PEAK: Secrets from the New Science of Expertise<br>译者: 王正林<br>出版年: 2016-11-6<br>页数: 340<br>定价: 39.00元<br>装帧: 平装<br>丛书: 学习典藏书系<br>ISBN: 9787111551287</p><a id="more"></a><p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-08.png" alt="2020/01/08"></p><h2 id="核心内容"><a href="#核心内容" class="headerlink" title="核心内容"></a>核心内容</h2><p>不论在什么行业或领域，提高表现与水平的最有效方法，全都遵循一系列普遍原则。我们把这种通用的方法命名为 <code>刻意练习</code>”`。</p><ul><li>练习就是不断重复吗？</li></ul><p>不是。不断重复只是“天真的练习”，无法带来进步。</p><p><strong>“正确的练习”需要好导师、有目标、有反馈……</strong></p><ul><li>我现在已经成年了，练习什么都已经晚了吧？</li></ul><p>不是。无论你是孩子还是成年人，无论你是否有“天赋”，只要掌握正确的方法，你的梦想都可以实现。</p><p>如果你相信“21天学会C语言”“3天学会弹钢琴”，</p><p>那么本书不适合你。</p><p>如果你不满足于自己的能力只是“足够好”，一直在追求“非常好”，</p><p>那么本书就是为你而写的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">放弃一切错误方法，从今天开始“刻意练习”，</span><br><span class="line">因为这是最强大的，也是唯一正确的学习方法。</span><br></pre></td></tr></table></figure><h2 id="超越1万小时定律"><a href="#超越1万小时定律" class="headerlink" title="超越1万小时定律"></a>超越1万小时定律</h2><p>畅销书《异类》作者格拉德威尔告诉你：“人们眼中的天才之所以卓越非凡，并非天资超人一等，而是付出了持续不断的努力。<code>只要经过 1 万小时的锤炼</code>，任何人都能从平凡变成超凡。”</p><p>然而，真相是，<code>从来不存在1万小时定律，它仅仅是畅销书作家对心理科学研究的一次不太严谨的演绎而已</code>。</p><p>最后，驳斥1万小时定律可以玩一个巧妙的思想游戏，这就是古希腊哲学家欧布里德（Eubulides）提出的<code>沙堆悖论（Sorites paradox）</code>：</p><blockquote><p>1 粒沙子不是堆。如果 1 粒沙子不是堆，那么 2 粒沙子也不是堆；如果 2 粒沙子不是堆，那么 3 粒沙子也不是堆；以此类推，9999 粒沙子也不是堆；因此，1 万粒沙子还不是堆。</p></blockquote><h2 id="刻意练习的本质"><a href="#刻意练习的本质" class="headerlink" title="刻意练习的本质"></a>刻意练习的本质</h2><p>熟悉写作技巧的畅销书作者常常会用一个清晰的行动规则，如“练习1万小时成为专家” <code>“21天养成好习惯”</code> 等来激发你的行动。</p><p>中枪了，这几天一直坚持 <code>21 天打卡行动</code>，哈哈！</p><p><code>长时记忆正是区分卓越者与一般人的一个重要能力，它才是刻意练习的指向与本质。</code></p><p><code>刻意练习的任务难度要适中，能收到反馈，有足够的次数重复练习，学习者能够纠正自己的错误。</code></p><p><code>多数不靠谱的成功学选择了错误的练习方式，虽说喊的口号是刻意练习，但实质并不是刻意练习，因为它们没有激活长时记忆能力。</code></p><p>长时记忆的培养要点主要有以下几个。</p><ul><li><code>赋予意义，精细编码</code>：（准）专家们能非常快地明白自己领域的单词与术语，在存储信息的时候，可以有意识地采取元认知的各项加工策略。</li><li><code>提取结构或模式</code>：往往需要将专业领域的知识、提取结构或者模式以更好的方式存储。比如，专家级的开发者善用设计模式。</li><li><code>加快速度、增加连接</code>：通过大量重复的刻意练习，专家在编码与提取过程方面比新手都快很多，增加了长时记忆与工作记忆之间的各种通路。</li></ul><h2 id="隐性知识"><a href="#隐性知识" class="headerlink" title="隐性知识"></a>隐性知识</h2><p><code>认知复杂性高与认知复杂性低的学习活动的差异在很大程度上表现为隐性知识的多少与比重。</code>隐性知识需要在情境中去寻。</p><blockquote><p>认知复杂度（cognitive complexity）是指你建构“客观”世界的能力。认知复杂度高的人具有高度复杂化的思维能力，更善于同时使用互补与互不相容的概念来理解客观世界。真实世界中，黑白对错并非截然分明。</p></blockquote><p>人的学习受到情境的制约或促进。你要学习的东西将实际应用在什么情境中，那么你就应该在什么样的情境中学习这些东西。</p><p>比如，你要学习编程，就应该在 <code>GitHub</code> 里学习，因为你以后编程就是通过 <code>GitHub</code>。</p><p>又如，你要学习讨价还价的技巧，就应该在实际的销售场合学习，因为这一技巧最终是用在销售场合中的。</p><p><code>学习科学大量研究表明，成人的最佳学习方式并非独自练习，而是在情境中学习。</code></p><ul><li><code>找到学习共同体</code>：因为大量知识存在于学习共同体的实践中，不是在书本中，所以有效的学习不是关门苦练，而是找到属于自己的学习小团体。如程序员在类似于GitHub这样的网站练习编程。</li><li><code>隐性知识显性化</code>：隐性知识是使人们有能力利用概念、事实以及程序来解决现实问题的知识。一般也被称为策略知识。</li><li><code>模仿榜样</code>：榜样可以是现实生活中的导师，也可以是网上的导师。</li><li><code>培养多样性</code>：在多种情境中实践，以此强调学习广阔的应用范围。例如，裁缝出师并不是已经练习了1万小时，而是能够缝制出足够好的衣服。</li></ul><p>图灵奖得主理查德·哈明（Richard Hamming）谈到如何变得卓越时认为，练习时间并没有那么重要，也无法精确和明示，他写道：</p><blockquote><p>在许多领域，通往卓越的道路不是精确计算时间的结果，而是模糊与含糊不清的。没有简单的模型通向伟大。</p></blockquote><p>即使是格拉德威尔拿来当作1万小时定律例子的比尔·盖茨也谦虚地谈道：</p><blockquote><p>1万小时定律是有帮助的，但真正实现，还需要坚持不懈，并练习上很多个周期。（The 10000hour rule helps. But to be achieved, it needs persistence and passing through a lot ofcycles.）</p></blockquote><p>这或许才是西蒙的十年定律对我们真正的启发：<code>耐心地、谦虚地保持大时间周期的刻意练习</code>。</p><h2 id="有目的的练习"><a href="#有目的的练习" class="headerlink" title="有目的的练习"></a>有目的的练习</h2><p><code>对刻意练习原则的运用，是为任何行业或领域策划和设计训练方法的最佳方式。</code></p><p>所谓 <code>天真的练习</code>，基本上只是反复地做某件事情，并指望只靠那种反复，就能提高表现和水平。</p><p>简单地讲，这就是天真的练习：<code>只是埋头干！</code></p><p>有目的的练习的四个特点</p><ol><li>具有定义明确的特定目标</li><li>专注</li><li>包含反馈</li><li>走出舒适区</li></ol><h3 id="遇到瓶颈怎么办"><a href="#遇到瓶颈怎么办" class="headerlink" title="遇到瓶颈怎么办"></a>遇到瓶颈怎么办</h3><p>有目的的练习：走出你的舒适区，但要以专注的方式制订明确的目标，为达到那些目标制订一个计划，并且想出监测你的进步的方法。还要想办法保持你的动机。</p><p>建立检索结构</p><h2 id="大脑的适应能力"><a href="#大脑的适应能力" class="headerlink" title="大脑的适应能力"></a>大脑的适应能力</h2><p>大脑拥有无限的适应能力</p><h3 id="走出舒适区的重要性"><a href="#走出舒适区的重要性" class="headerlink" title="走出舒适区的重要性"></a>走出舒适区的重要性</h3><ul><li>身体偏爱稳定性</li><li>被迫走出舒适区之后</li><li>挑战越大，变化越大，但不要太过</li></ul><p><code>大脑对于处在舒适区之外却离得并不太远的“甜蜜点”上的挑战，改变最为迅速。</code></p><p>由训练引起的认知和生理变化需要继续保持。如果停止训练，它们便开始消失。</p><p>对于刻意练习，我们的目标不仅仅是发掘自己的潜能，而且要构筑它，以便从前不可能做到的事情变得可能做到。</p><h2 id="刻意练习是什么？"><a href="#刻意练习是什么？" class="headerlink" title="刻意练习是什么？"></a>刻意练习是什么？</h2><p>不只是有目的的练习</p><p>刻意练习与其他类型的有目的的练习在两个重要的方面上存在着差别。首先，它需要一个已经得到合理发展的行业或领域，其次，需要一位能够布置练习作业的导师。</p><p>刻意练习的特点</p><ul><li>刻意练习发展的技能，是其他人已经想出怎样提高的技能，也是已经拥有一整套行之有效的训练方法的技能。训练的方案应当由导师或教练来设计和监管，他们既熟悉杰出人物的能力，也熟悉怎么样才能最好地提高那种能力。</li><li>刻意练习发生在人们的舒适区之外，而且要求学生持续不断地尝试那些刚好超出他当前能力范围的事物。因此，它需要人们付出近乎最大限度的努力。一般来讲，这并不令人心情愉快。</li><li>刻意练习包含得到良好定义的特定目标，通常还包括目标表现的某些方面；它并非指向某些模糊的总体改进。一旦设定了总体目标，导师或教练将制订一个计划，以便实现一系列微小的改变，最后将这些改变累积起来，构成之前期望的更大的变化。改进目标表现的某些方面，使得从业者能够看到他的表现已经通过练习得到了提高。</li><li>刻意练习是有意而为的，也就是说，它需要人们完全的关注和有意识的行动。简单地遵照导师或教练的指示去做，还不够。学生必须紧跟他的练习的特定目标，以便能做出适当的调整，控制练习。</li><li>刻意练习包含反馈，以及为应对那些反馈而进行调整的努力。在练习过程的早期，大量的反馈来自导师或教练，他们将监测学生的进步、指出存在的问题，并且提供解决这些问题的方法。随着时间的推移，学生必须学会自己监测自己、自己发现错误，并做出相应调整。这种自我监测，需要高效的心理表征。</li><li>刻意练习既产生有效的心理表征，又依靠有效的心理表征。提高水平与改进心理表征是相辅相成的，两者不可偏废；随着人们水平的提升，表征也变得更加详尽和有效，反过来使得人们可能实现更大程度的改进。心理表征使人们能监测在练习中和实际的工作中做得怎么样。它们表明了做某件事的正确方法，并使得人们注意到什么时候做得不对，以及怎样来纠正。</li><li>刻意练习通过着重关注过去获取的技能的某些特定方面，致力于有针对性地提高那些方面，并且几乎总是包括构建或修改那些过去已经获取的技能；随着时间的推移，这种逐步的改进最终将造就卓越的表现。由于新技能的学习是建立在现有技能基础上的，因此，导师会为初学者提供正确的基本技能，使学生后来能在更高层面上重新学习那些基本的技能。</li></ul><p><code>最佳方法是找到优秀导师</code></p><p>不论什么时候，只要有可能，最佳的方法几乎总是找一位优秀的教练或导师。</p><h3 id="让练习变成日常工作的一部分"><a href="#让练习变成日常工作的一部分" class="headerlink" title="让练习变成日常工作的一部分"></a>让练习变成日常工作的一部分</h3><p><code>“边干边学”方法的一个好处是，它使人们熟悉练习的习惯，并思考如何练习。</code></p><h2 id="成为杰出人物的路线图"><a href="#成为杰出人物的路线图" class="headerlink" title="成为杰出人物的路线图"></a>成为杰出人物的路线图</h2><ul><li>第一阶段：产生兴趣</li><li>第二阶段：变得认真</li><li>第三阶段：全力投入</li><li>第四阶段：开拓创新</li></ul><p>最后附上明天的桌面背景。</p><p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-09.png" alt="2020/01/09"></p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2020/01/08/PEAK/%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0.jpg&quot; class=&quot;&quot; title=&quot;刻意练习&quot;&gt;

&lt;p&gt;作者: [美] 安德斯·艾利克森（Anders Ericsson） / 罗伯特·普尔（Robert Pool）&lt;br&gt;出版社: 机械工业出版社&lt;br&gt;出品方: 华章心理&lt;br&gt;副标题: 如何从新手到大师&lt;br&gt;原作名: PEAK: Secrets from the New Science of Expertise&lt;br&gt;译者: 王正林&lt;br&gt;出版年: 2016-11-6&lt;br&gt;页数: 340&lt;br&gt;定价: 39.00元&lt;br&gt;装帧: 平装&lt;br&gt;丛书: 学习典藏书系&lt;br&gt;ISBN: 9787111551287&lt;/p&gt;
    
    </summary>
    
    
      <category term="game" scheme="https://2020.iosdevlog.com/categories/game/"/>
    
    
      <category term="Godot" scheme="https://2020.iosdevlog.com/tags/Godot/"/>
    
  </entry>
  
  <entry>
    <title>客户端开发</title>
    <link href="https://2020.iosdevlog.com/2020/01/08/client/"/>
    <id>https://2020.iosdevlog.com/2020/01/08/client/</id>
    <published>2020-01-08T03:10:27.000Z</published>
    <updated>2020-01-08T04:14:58.597Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/01/08/client/Client.jpg" class="" title="Client"><a id="more"></a><h2 id="从-0-开始整理开发流程"><a href="#从-0-开始整理开发流程" class="headerlink" title="从 0 开始整理开发流程"></a>从 0 开始整理开发流程</h2><ul><li>选择开发环境</li><li>下载脚本工具</li><li>选择编程语言版本</li><li>下载编译器</li><li>选择 C/C++ 和 Python 的 IDE</li><li>测试编译器</li><li>专为 Python 开发的游戏库 Pygame<ul><li>成熟</li><li>稳定</li><li>简单</li></ul></li></ul><h2 id="如何建立一个-Windows-窗体？"><a href="#如何建立一个-Windows-窗体？" class="headerlink" title="如何建立一个 Windows 窗体？"></a>如何建立一个 Windows 窗体？</h2><h3 id="Windows-窗体由哪些部分构成？"><a href="#Windows-窗体由哪些部分构成？" class="headerlink" title="Windows 窗体由哪些部分构成？"></a>Windows 窗体由哪些部分构成？</h3><ul><li>标题栏</li><li>菜单栏</li><li>工作区</li><li>状态栏</li><li>滚动条</li><li>窗体缩放按钮</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_window</span><span class="params">(w, h)</span>:</span></span><br><span class="line">  ws = root.winfo_screenwidth()</span><br><span class="line">  hs = root.winfo_screenheight()</span><br><span class="line">  x = (ws/<span class="number">2</span>) - (w/<span class="number">2</span>)</span><br><span class="line">  y = (hs/<span class="number">2</span>) - (h/<span class="number">2</span>)</span><br><span class="line">  root.geometry(<span class="string">"%dx%d+%d+%d"</span> % (w, h, x, y))</span><br><span class="line"></span><br><span class="line">root = tkinter.Tk(className=<span class="string">'Python windows app'</span>)</span><br><span class="line">my_window(<span class="number">200</span>, <span class="number">200</span>)</span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure><h3 id="标准标准的-Windows-窗体"><a href="#标准标准的-Windows-窗体" class="headerlink" title="标准标准的 Windows 窗体"></a>标准标准的 Windows 窗体</h3><ul><li>窗体的结构是在建立窗体之前就定义下来的</li><li>所有长时间运行的程序，包括游戏，包括 Windows 本身都是一个大循环。我们在这个循环里做我们想做的事情，直到循环结束</li><li>如果使用脚本语言的方式编写窗体，就不需要关心那么多的东西，只需要定义坐标、位置和窗体名称即可。</li></ul><h2 id="如何区分图形和图像？"><a href="#如何区分图形和图像？" class="headerlink" title="如何区分图形和图像？"></a>如何区分图形和图像？</h2><h3 id="图形"><a href="#图形" class="headerlink" title="图形"></a>图形</h3><p><code>我们所看到的一种点、线、面的描述对象。</code></p><h3 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h3><p><code>由数据组成的任意像素点的描述对象。</code></p><p>图形其实是图像的一种抽象表现形式。</p><h2 id="如何绘制游戏背景？"><a href="#如何绘制游戏背景？" class="headerlink" title="如何绘制游戏背景？"></a>如何绘制游戏背景？</h2><p>所谓左右卷轴，就是游戏画面是横向的、左右运动的，而上下卷轴就是游戏画面是竖直对的、上下运动的。</p><h2 id="如何载入“飞机”和“敌人”？"><a href="#如何载入“飞机”和“敌人”？" class="headerlink" title="如何载入“飞机”和“敌人”？"></a>如何载入“飞机”和“敌人”？</h2><ul><li>随机数</li><li>载入主角飞机</li><li>载入敌人飞机</li></ul><h2 id="如何设置图像的前后遮挡？"><a href="#如何设置图像的前后遮挡？" class="headerlink" title="如何设置图像的前后遮挡？"></a>如何设置图像的前后遮挡？</h2><p>在做遮挡的时候，要考虑绘制顺序，先绘制的一定会被后绘制的遮挡。</p><h2 id="如何设置精灵的变形、放大和缩小？"><a href="#如何设置精灵的变形、放大和缩小？" class="headerlink" title="如何设置精灵的变形、放大和缩小？"></a>如何设置精灵的变形、放大和缩小？</h2><p>什么是 <strong>精灵</strong>？</p><p>精灵是一个游戏开发中的名词，英文叫 <code>Sprite</code>。</p><blockquote><p>它多用于游戏中的人物和可移动物品，也可以用于显示鼠标指针和输入的文字。如果屏幕上的可移动物体的尺寸比一个精灵图要大，可由若干个精灵图缩放或者拼接而成。</p></blockquote><ul><li>从 <code>宏观</code> 的概念讲，精灵就是一幅 <strong>图片</strong></li><li>从 <code>编程</code> 的角度讲，精灵是一种 <strong>管理器</strong></li></ul><p>精灵的变形、缩放以及 pygame 中关于精灵类的一些简单的操作。</p><p>你可以直观地感受到，精灵类和 group 类配合起来使用是一件很方便的事情，也就是说，我们忽略了 blit 的这些方法，直接在 group 中，进行 update 和 draw 就可以一次性做完很多的工作。</p><p>如果我们单独编写精灵的序列帧动画函数，也不是不行，但是你可能需要编写相当多的代码来代替 Sprite 和 group 类的工作。</p><h2 id="如何设置淡入淡出和碰撞检测？"><a href="#如何设置淡入淡出和碰撞检测？" class="headerlink" title="如何设置淡入淡出和碰撞检测？"></a>如何设置淡入淡出和碰撞检测？</h2><p>如何做出淡入淡出效果？</p><ul><li>fill 函数</li><li>设置 Alpha 混合和背景填充，来实现淡入淡出</li></ul><p>如何设置碰撞检测？</p><ul><li>通过判断图像 x 轴和 y 轴是否重叠</li></ul><h2 id="如何制作游戏资源包和保存机制？"><a href="#如何制作游戏资源包和保存机制？" class="headerlink" title="如何制作游戏资源包和保存机制？"></a>如何制作游戏资源包和保存机制？</h2><p>什么是资源包？</p><ul><li>资源包是一种将游戏的资源和素材进行分类、梳理，并且打包的一种包裹。</li><li>资源包可以用来压缩游戏资源和素材，减少游戏体积。</li><li>资源包里存在任何可能性，比如它可以包含图片文件、模型文件、音频文件、脚本文件等等，具体要看游戏开发人员的配置需求，来决定资源包里的内容。</li></ul><p>资源包的格式</p><ul><li>资源包头</li><li>资源包版本</li><li>资源包是否进行压缩</li><li>资源包的目录结构以及素材名文件名偏移量</li></ul><h3 id="完整的资源包"><a href="#完整的资源包" class="headerlink" title="完整的资源包"></a>完整的资源包</h3><ul><li>[资源包头]</li><li>[版本号]</li><li>[是否压缩]</li><li>[资源包目录/素材文件名A][文件A偏移量][文件A长度]</li><li>…</li><li>[资源包目录/素材文件名N][文件N偏移量][文件N长度]</li><li>[素材A本体]….[素材N本体]</li><li>[结束符]</li></ul><p>制作资源包的目的是为了厘清游戏素材以及游戏素材的存放结构。资源包的结构与压缩包的结构比较相似，但是为了更贴合游戏程序读取，会对虚拟目录和素材文件名等，做一些修改。</p><p>为了方便保存游戏进度，我们可以做成游戏脚本，第二次打开游戏直接载入保存的脚本即可。</p><h2 id="如何载入背景音乐和音效？"><a href="#如何载入背景音乐和音效？" class="headerlink" title="如何载入背景音乐和音效？"></a>如何载入背景音乐和音效？</h2><p>BASS 音频库 <a href="http://www.un4seen.com" target="_blank" rel="noopener">http://www.un4seen.com</a> </p><p>这个音频库是不开源的，如果你只是自己开发游戏玩玩，非商业目的，就可以使用。如果是商业使用，那就需要购买证书。</p><p>参考：<a href="https://time.geekbang.org/column/intro/87" target="_blank" rel="noopener">从0开始学游戏开发</a></p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2020/01/08/client/Client.jpg&quot; class=&quot;&quot; title=&quot;Client&quot;&gt;
    
    </summary>
    
    
      <category term="game" scheme="https://2020.iosdevlog.com/categories/game/"/>
    
    
      <category term="Client" scheme="https://2020.iosdevlog.com/tags/Client/"/>
    
  </entry>
  
  <entry>
    <title>《高效能人士的七个习惯》</title>
    <link href="https://2020.iosdevlog.com/2020/01/07/The-7-Habits-of-Highly-Effective-People/"/>
    <id>https://2020.iosdevlog.com/2020/01/07/The-7-Habits-of-Highly-Effective-People/</id>
    <published>2020-01-07T11:31:46.000Z</published>
    <updated>2020-01-08T14:33:53.635Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/01/07/The-7-Habits-of-Highly-Effective-People/The-7-Habits-of-Highly-Effective-People.jpeg" class="" title="高效能人士的七个习惯 (Wizard)"><p>高效能人士的七个习惯（精华版） </p><p>作者:  [美] 史蒂芬·柯维<br>出版社: 中国青年出版社<br>原作名: The Seven Habits of Highly Effective People<br>译者: 高新勇 / 王亦兵 / 葛雪蕾<br>出版年: 2011-6<br>页数: 286<br>定价: 29.00元<br>装帧: 平装<br>ISBN: 9787500649038</p><a id="more"></a><h2 id="习惯一：积极主动（BE-PROACTIVE）"><a href="#习惯一：积极主动（BE-PROACTIVE）" class="headerlink" title="习惯一：积极主动（BE PROACTIVE）"></a>习惯一：积极主动（BE PROACTIVE）</h2><p>积极主动即采取主动，为自己过去、现在及未来的行为负责，并依据原则及价值观，而非情绪或外在环境来下决定。</p><p>积极主动的人是改变的催生者，他们摒弃被动的受害者角色，不怨天尤人，发挥了人类四项独特的禀赋——自觉、良知、想象力和自主意志，同时以由内而外的方式来创造改变，积极面对一切。他们选择创造自己的人生，这也是每个人最基本的决定。</p><h2 id="习惯二：以终为始（BEGIN-WITH-THE-END-IN-MIND）"><a href="#习惯二：以终为始（BEGIN-WITH-THE-END-IN-MIND）" class="headerlink" title="习惯二：以终为始（BEGIN WITH THE END IN MIND）"></a>习惯二：以终为始（BEGIN WITH THE END IN MIND）</h2><p>所有事物都经过两次的创造——先是在脑海里酝酿，其次才是实质的创造。</p><p>个人、家庭、团队和组织在做任何计划时，均先拟出愿景和目标，并据此塑造未来，全心投入自己最重视的原则、价值观、关系及目标。对个人、家庭或组织而言，使命宣言可以说是愿景的最高形式，它是根本的决策，主宰了所有其他决定。</p><p>领导工作的核心，就是基于共有的使命、愿景和价值观，创造出一个文化。</p><h2 id="习惯三：要事第一（PUT-FIRST-THINGS-FIRST）"><a href="#习惯三：要事第一（PUT-FIRST-THINGS-FIRST）" class="headerlink" title="习惯三：要事第一（PUT FIRST THINGS FIRST）"></a>习惯三：要事第一（PUT FIRST THINGS FIRST）</h2><p>要事第一即实质的创造，是梦想（你的目标、愿景、价值观及要事处理顺序）的组织与实践。</p><p>次要的事不必摆在第一，要事也不能放在第二。无论迫切性如何，个人与组织均要更多聚焦要事，重点是，把要事放在第一位。</p><h2 id="习惯四：双赢思维（THINK-WIN-WIN）"><a href="#习惯四：双赢思维（THINK-WIN-WIN）" class="headerlink" title="习惯四：双赢思维（THINK WIN-WIN）"></a>习惯四：双赢思维（THINK WIN-WIN）</h2><p>双赢思维是一种基于互敬、寻求互惠的思考框架与心意，目的是分享更多的机会、财富及资源，而非敌对式竞争。双赢既非损人利己（赢输），亦非损己利人（输赢）。</p><p>我们的工作伙伴及家庭成员要从互赖式的角度来思考（“我们”，而非“我”）。双赢思维鼓励我们解决问题，并协助个人找到互惠的解决办法，是一种资讯、力量、认可及报酬的分享。</p><h2 id="习惯五：知彼解己（SEEK-FIRST-TO-UNDERSTAND-THEN-TO-BE-UNDERSTOOD）"><a href="#习惯五：知彼解己（SEEK-FIRST-TO-UNDERSTAND-THEN-TO-BE-UNDERSTOOD）" class="headerlink" title="习惯五：知彼解己（SEEK FIRST TO UNDERSTAND,THEN TO BE UNDERSTOOD）"></a>习惯五：知彼解己（SEEK FIRST TO UNDERSTAND,THEN TO BE UNDERSTOOD）</h2><p>当我们不再急切回答，改以诚心去了解、聆听别人，便能开启真正的沟通，增进彼此关系。</p><p>对方获得理解后，会觉得受到尊重与认可，进而卸下心理防备，坦然而谈，双方对彼此的了解也就更顺畅自然。知彼需要仁慈心，解己需要勇气，能平衡两者，则可大幅提升沟通的效率。</p><h2 id="习惯六：统合综效（SYNERGIZE）"><a href="#习惯六：统合综效（SYNERGIZE）" class="headerlink" title="习惯六：统合综效（SYNERGIZE）"></a>习惯六：统合综效（SYNERGIZE）</h2><p>统合综效谈的是创造第三种选择，即非按照我的方式，亦非遵循你的方式，而是创造第三种更好的办法。</p><p>它是互相尊重的成果——不但了解了彼此，甚至还称赞彼此的差异，欣赏对方解决问题及把握机会的手法。</p><p>个人的力量是团队和家庭统合综效的基础，能使整体获得一加一大于二的成效。实践统合综效的人际关系和团队会扬弃敌对的态度 <em>（1+1＝0.5）</em>，不以妥协为目标 <em>（1+1＝1.5）</em>，也不仅仅止于合作 <em>（1+1＝2）</em>，他们要的是创造式的合作 <em>（1＋1＞2）</em>。</p><h2 id="习惯七：不断更新（SHARPEN-THE-SAW）"><a href="#习惯七：不断更新（SHARPEN-THE-SAW）" class="headerlink" title="习惯七：不断更新（SHARPEN THE SAW）"></a>习惯七：不断更新（SHARPEN THE SAW）</h2><p>“不断更新”谈的是，如何在四个生活基本面（身体、精神、智力、社会/情感）中，不断更新自己。</p><p>这个习惯提升了其他六个习惯的实施效率。对组织而言，习惯七提供了愿景、更新及不断的改善，使组织不至呈现老化及疲态，并迈向新的成长之路。对家庭而言，习惯七通过固定的个人及家庭活动，使家庭效能升级，就像建立传统，使家庭日新月异，即是一例。</p><img src="/2020/01/07/The-7-Habits-of-Highly-Effective-People/7-Habits.jpeg" class="" title="7-Habits"><p>最后附上明天的桌面背景。</p><p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-08.png" alt="2020/01/08"></p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2020/01/07/The-7-Habits-of-Highly-Effective-People/The-7-Habits-of-Highly-Effective-People.jpeg&quot; class=&quot;&quot; title=&quot;高效能人士的七个习惯 (Wizard)&quot;&gt;

&lt;p&gt;高效能人士的七个习惯（精华版） &lt;/p&gt;
&lt;p&gt;作者:  [美] 史蒂芬·柯维&lt;br&gt;出版社: 中国青年出版社&lt;br&gt;原作名: The Seven Habits of Highly Effective People&lt;br&gt;译者: 高新勇 / 王亦兵 / 葛雪蕾&lt;br&gt;出版年: 2011-6&lt;br&gt;页数: 286&lt;br&gt;定价: 29.00元&lt;br&gt;装帧: 平装&lt;br&gt;ISBN: 9787500649038&lt;/p&gt;
    
    </summary>
    
    
      <category term="自我提升" scheme="https://2020.iosdevlog.com/categories/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/"/>
    
    
      <category term="读书" scheme="https://2020.iosdevlog.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>游戏开发基础知识</title>
    <link href="https://2020.iosdevlog.com/2020/01/07/Game-development-basics/"/>
    <id>https://2020.iosdevlog.com/2020/01/07/Game-development-basics/</id>
    <published>2020-01-07T10:47:41.000Z</published>
    <updated>2020-01-08T04:14:55.942Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-07.png" alt="2020/01/07"></p><a id="more"></a><h2 id="游戏开发需要了解哪些背景知识？"><a href="#游戏开发需要了解哪些背景知识？" class="headerlink" title="游戏开发需要了解哪些背景知识？"></a>游戏开发需要了解哪些背景知识？</h2><p>现在公认的第一款电子游戏（也就是主机游戏），是 1952 年面世的。游戏玩的是井字棋，6 年后才出现了简陋的网球游戏。</p><p>随后的《太空侵略者》，是最经典的一款游戏。在这之后，我们耳熟能详的任天堂红白机，发布了《吃豆人》《大金刚》等游戏。再之后，就进入了各种游戏主机竞相绽放的阶段。</p><p>在电脑游戏方面，第一款电脑游戏是 1962 年面世的《太空战争》。</p><h3 id="游戏有哪些种类？"><a href="#游戏有哪些种类？" class="headerlink" title="游戏有哪些种类？"></a>游戏有哪些种类？</h3><ol><li>主机游戏</li><li>电脑游戏</li><li>移动游戏</li><li>电视机游戏</li></ol><h3 id="游戏开发从哪里开始学起？"><a href="#游戏开发从哪里开始学起？" class="headerlink" title="游戏开发从哪里开始学起？"></a>游戏开发从哪里开始学起？</h3><p>2D 电脑游戏</p><ul><li>2D 游戏涉及最基本的图形、图像知识</li><li>2D 游戏涉及最核心的网络呈现过程</li></ul><h3 id="2D-游戏的类型"><a href="#2D-游戏的类型" class="headerlink" title="2D 游戏的类型"></a>2D 游戏的类型</h3><ol><li>横版游戏</li><li>视视角游戏</li><li>斜 45 度角的视角游戏（“伪 3D”游戏）</li></ol><h2 id="2D游戏和3D游戏有什么区别？"><a href="#2D游戏和3D游戏有什么区别？" class="headerlink" title="2D游戏和3D游戏有什么区别？"></a>2D游戏和3D游戏有什么区别？</h2><ol><li>呈现画面</li><li>文件体积</li></ol><h3 id="3D-游戏和-2D-游戏在美术上的区别"><a href="#3D-游戏和-2D-游戏在美术上的区别" class="headerlink" title="3D 游戏和 2D 游戏在美术上的区别"></a>3D 游戏和 2D 游戏在美术上的区别</h3><ol><li>2D 游戏是 2D 图像图形进行线性的一些变换将之渲染至屏幕而成</li><li>而 3D 的游戏是将 3D 的图形图像进行 3D 线性变换然后投影（Projection）至显示器（显示器是 2D 的）而成</li></ol><h2 id="游戏的发动机：游戏引擎"><a href="#游戏的发动机：游戏引擎" class="headerlink" title="游戏的发动机：游戏引擎"></a>游戏的发动机：游戏引擎</h2><img src="/2020/01/07/Game-development-basics/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E.png" class="" title="游戏引擎"><blockquote><p>游戏引擎是指一些已编写好的可编辑电脑游戏系统或者一些交互式实时图像应用程序的核心组件。这些系统为游戏设计者提供各种编写游戏所需的各种工具，其目的在于让游戏设计者能容易和快速地做出游戏程序，而不用由零开始。大部分都支持多种操作系统平台，如Linux、Mac OS X、Windows。</p></blockquote><p>大多数游戏引擎包含以下系统：</p><ol><li>渲染引擎（即“渲染器”，含二维图像引擎和三维图像引擎）</li><li>物理引擎</li><li>碰撞检测系统</li><li>音效</li><li>脚本引擎</li><li>电脑动画</li><li>人工智能</li><li>网络引擎</li><li>场景管理等</li></ol><p>——<a href="https://zh.wikipedia.org/zh-cn/游戏引擎" target="_blank" rel="noopener">https://zh.wikipedia.org/zh-cn/游戏引擎</a></p><ol><li>游戏引擎就是图形引擎</li><li>游戏引擎是一整套游戏解决方案</li><li>游戏引擎是一整套编程接口</li></ol><p>游戏引擎其实也包括游戏开发的一系列工具，也就是诸如地图编辑器、关卡编辑器、人物编辑器、资源编辑器等。</p><h2 id="底层绘图接口的妙用"><a href="#底层绘图接口的妙用" class="headerlink" title="底层绘图接口的妙用"></a>底层绘图接口的妙用</h2><h3 id="几种常见的绘图接口"><a href="#几种常见的绘图接口" class="headerlink" title="几种常见的绘图接口"></a>几种常见的绘图接口</h3><ol><li>OpenGL</li><li>DirectX</li><li>SDL(Simple DirectMedia Layer，简单的直接媒体层)</li><li>GDI(Graphics Device Interface)</li><li>GDI+</li></ol><h2 id="构建游戏场景的武器：地图编辑器"><a href="#构建游戏场景的武器：地图编辑器" class="headerlink" title="构建游戏场景的武器：地图编辑器"></a>构建游戏场景的武器：地图编辑器</h2><p>为什么要了解 <strong>地图编辑器的编写过程</strong>？</p><ol><li>更好地了解游戏引擎</li><li>优化游戏开发流程</li><li>优化游戏开发流程</li><li>UI、按钮和键盘事件的使用</li><li>团队磨合</li></ol><p>地图编辑器与关卡编辑器</p><p>关卡编辑器是一种主要给策划使用的编辑器，它涉及地图中的关卡内容。 </p><h3 id="为什么要做游戏-Demo？"><a href="#为什么要做游戏-Demo？" class="headerlink" title="为什么要做游戏 Demo？"></a>为什么要做游戏 Demo？</h3><ol><li>完成游戏核心框架<ol><li>完成该游戏总体的核心内容框架</li></ol></li><li>测试 bug</li><li>磨合开发团队</li><li>最终会被舍弃</li></ol><p><strong>一上来就开始编写正式版本的游戏，很有可能会出现无法预估的 bug 和无法修正的问题</strong></p><p>参考：<a href="https://time.geekbang.org/column/intro/87" target="_blank" rel="noopener">从0开始学游戏开发</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-07.png&quot; alt=&quot;2020/01/07&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="game" scheme="https://2020.iosdevlog.com/categories/game/"/>
    
    
      <category term="beginner" scheme="https://2020.iosdevlog.com/tags/beginner/"/>
    
  </entry>
  
  <entry>
    <title>从 0 开始学游戏开发</title>
    <link href="https://2020.iosdevlog.com/2020/01/06/game/"/>
    <id>https://2020.iosdevlog.com/2020/01/06/game/</id>
    <published>2020-01-06T14:15:51.000Z</published>
    <updated>2020-01-08T04:14:55.942Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-06.png" alt="2020/01/06"></p><a id="more"></a><p>游戏行业一直是公认的“吸金”行业。对于热爱游戏的人，能够开发出一款自己的游戏，绝对是一件很酷很有格调的事。游戏行业的高回报，也吸引着越来越多的人跃跃欲试。</p><p>那么，如果想成为一名专业的游戏开发工程师，究竟该如何入门呢？</p><ul><li>基础知识<ul><li>游戏开发中最重要的三个武器<ul><li>游戏引擎</li><li>底层绘图接口</li><li>地图编辑器</li></ul></li></ul></li><li>客户端开发<ul><li>梳理整个开发流程，手把手教你编写一个窗体、区分图形和图像、绘制游戏背景及內容填充。</li></ul></li><li>UI 和键盘鼠标<ul><li>如何在游戏中载入 UI 和菜单，如何用鼠标和键盘控制游戏精灵，以及整个客户端的网络连接问题。</li></ul></li><li>脚本语言<ul><li>简单易懂的 C/C++ 代码讲解如何嵌入脚本语言，阐述脚本语言在游戏开发中的应用，以及如何使用脚本语言编写更多的周边工具。</li></ul></li><li>服务器端开发<ul><li>闻述游戏开发中网络传输相关问题，比如选择开发语言、定制开发协议，多线程和并发问题，心跳包离线和断网处理，用网关服务器进行负载均衡，內容保存和缓存处理等。</li></ul></li><li>热点剖析<ul><li>解析热门的 HTML5 游戏和移动端游戏的技术及威力，并带你编写一款 HTML5 游戏，教你选择移动端游戏引擎，最后谈一谈独立游戏开发者的未来发展。</li></ul></li></ul><p>跟着我，可以从最简单的 2D 小游戏开始，到炫酷的 AR 多人对战游戏。</p><p>参考：<a href="https://time.geekbang.org/column/intro/87" target="_blank" rel="noopener">从0开始学游戏开发</a></p><p>明天介绍一些游戏开发的基础知识。</p><p>游戏开发直播地址：<a href="https://live.bilibili.com/4311135" target="_blank" rel="noopener">https://live.bilibili.com/4311135</a></p><p>GitHub 游戏源码: <a href="https://github.com/GameDevLog/GameDevLogTemplete" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete</a></p><h2 id="计划未完成怎么办？"><a href="#计划未完成怎么办？" class="headerlink" title="计划未完成怎么办？"></a>计划未完成怎么办？</h2><ol><li>减少工作量</li><li>根据精力，排好序，按计划执行</li></ol><p>找了几个相关俗语：</p><ul><li>计划赶不上变化</li><li>以不变应万变</li><li>未雨绸缪</li><li>不打无准备之仗</li><li>亡羊补牢，未为迟也</li></ul><p>总结一下就是提前准备，计划不能按时完成是不可避免的，要能找到补救方法。</p><p>我应该提前一点做好准备，在未完成前给出提示，后期再将计划补上。</p><p>最后附上明天的桌面背景。</p><p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-07.png" alt="2020/01/07"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-06.png&quot; alt=&quot;2020/01/06&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="game" scheme="https://2020.iosdevlog.com/categories/game/"/>
    
    
      <category term="beginner" scheme="https://2020.iosdevlog.com/tags/beginner/"/>
    
  </entry>
  
  <entry>
    <title>《精力管理》-计划未完成怎么办？</title>
    <link href="https://2020.iosdevlog.com/2020/01/05/The-Power-of-Full-Engagement/"/>
    <id>https://2020.iosdevlog.com/2020/01/05/The-Power-of-Full-Engagement/</id>
    <published>2020-01-05T12:57:09.000Z</published>
    <updated>2020-01-07T11:08:09.078Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-05.png" alt="2020/01/05"></p><p>《精力管理》</p><p>作者:  [美] 吉姆•洛尔<br>出版社: 中信出版社<br>译者: 付涛<br>出版年: 2003-12<br>页数: 251<br>定价: 25.00元<br>装帧: 平装<br>ISBN: 9787508600048</p><img src="/2020/01/05/The-Power-of-Full-Engagement/%E7%B2%BE%E5%8A%9B%E7%AE%A1%E7%90%86.jpeg" class=""><a id="more"></a><h2 id="理想很丰满，现实很骨感"><a href="#理想很丰满，现实很骨感" class="headerlink" title="理想很丰满，现实很骨感"></a>理想很丰满，现实很骨感</h2><p>我在 2019 年底，决定 2020 年的每一天博客都有更新，在 B 站上也有支持每天能直播一点游戏开发，或者其它什么开发相关的事情。</p><p>多么美好的理想啊！</p><p>为什么说是理想呢？2020 年的第一周还没有结束，就已经无法实现自己定下的计划了。</p><p>周六有事出门，晚上回到家已经快 <strong>00:00</strong> 了，一天计划失败，今天，也就是周日，早上去踢足球，第一节攻入 <code>1</code> 球，之后与对方对抗中受伤，手上，胳膊上流了不少血。这只是皮肉伤，下周还是可以继续踢球的。</p><p>吃完中午饭，陪两个小朋友学英语。</p><p>下午带小朋友去游乐园，回来已经 <strong>18:30</strong>，这时候有点累，于是睡到 <strong>19:30</strong>，吃完晚饭后，再想今天的任务还能完成吗？</p><h2 id="精力管理"><a href="#精力管理" class="headerlink" title="精力管理"></a>精力管理</h2><p><strong>2020/01/03</strong> 看了《时间管理:如何充分利用你的24小时》，里面介绍的书就有《全情投入的力量：管理精力，而不是时间，是提高效能和自我更新的关键》（The Power of Full Engagement:Managing Energy, Not Time, is the Key to High Performance and Personal Renewal ）（Free出版社， 2003），其实就是这本《精力管理》。前面的《全情投入的力量》是书名的直译，后面的《精力管理》才是中文出版的名字。</p><p>这本书之前应该看过，可能很多的我之前都看到，不过都没有什么印象，我在 <strong>2017</strong>年的时候参加过一个读书活动，一年内读了大概 <em>80</em> 本左右的书，大部分是略读，有一些我可能去图书馆借书来读。后来还收到一本活动送的一本书：《哲学是什么》。</p><p>我印象比较深的一本书是《刻意练习》，其它的书可能内容忘得差不多了。</p><p>之前看的《精力管理》，只记得里面讲到训练运动员，得了金牌，现在忘得差不多了，等于没有看过。</p><p>今天也是大概翻了一下，里面有很多的篇章在举例。书里也不少坐好的思维导图，也省得自己总结了。</p><p>精力就是做事情的能力。</p><ul><li>体能</li><li>情感</li><li>思维</li><li>意志</li></ul><h3 id="什么是精力及如何管理精力"><a href="#什么是精力及如何管理精力" class="headerlink" title="什么是精力及如何管理精力"></a>什么是精力及如何管理精力</h3><ul><li>精力管理，而非时间，才是高效表现的基础：高效表现源于有技巧的精力管理</li><li>领导者正是团体精力的统筹人：他们首先要具备个人精力管理技巧，然后才能调动、集中、投入和维持团队的集体精力</li><li>全情投入是确保最优表现的最佳精力状态</li><li>精力管理的四个基本原则<ul><li>原则一：全情投入需要调动四种独立且相互关联的精力源：体能，情感，思维和意志</li><li>原则二：因为使用过度和使用不足都会削弱精力，必须不时更新精力以平衡消耗</li><li>原则三：为了提高能力，我们必须突破自己的惯常极限，模仿运动员进行系统训练</li><li>原则四：积极的精力仪式习惯，即细致具体的精力管理方法，是全情投入、保持高效表现的诀窍</li></ul></li><li>确保改变持久需要完成三个步骤<ul><li>明确目标</li><li>正视现实</li><li>付诸行动</li></ul></li></ul><h3 id="劳逸结合的平衡"><a href="#劳逸结合的平衡" class="headerlink" title="劳逸结合的平衡"></a>劳逸结合的平衡</h3><ul><li>精力的消耗与恢复是人类最基本的需求：波动</li><li>波动的反面是直线：精力消耗大于恢复，或者精力恢复大于消耗</li><li>压力与恢复的平衡对于个人或团体的高效表现都至关重要</li><li>我们必须在四个层面都保持健康波动的节奏，即“效能金字塔”的组成部分：体能，情感，思维和意志</li><li>我们培养情感、思维和意志能力的方法与体力相同，必须系统性地将自己置于超出惯常极限的压力当中，并在过后得到充分恢复</li><li>拓展能力需要为了长期回报接受短期的不适 </li></ul><h3 id="为身体添柴加火"><a href="#为身体添柴加火" class="headerlink" title="为身体添柴加火"></a>为身体添柴加火</h3><ul><li>体能精力是生活最基本的精力源</li><li>体能精力通过氧气和葡萄糖的化学作用获得</li><li>体能精力最关键的两项调节器是呼吸和进食</li><li>每天吃5～6顿低热量高营养的食物，能够为机体持续供应葡萄糖和必须的营养</li><li>每天喝64盎司的水是有效管理体力的关键要素</li><li>大多数人需要每晚7～8小时的睡眠，方可正常运作</li><li>早睡早起可以优化效能表现</li><li>间歇训练比稳态训练在锻炼体力方面更有效，在体力恢复方面更高效</li><li>为了保持全情投入的状态，我们必须工作90～120分钟就休息片刻</li></ul><h3 id="把威胁转化为挑战"><a href="#把威胁转化为挑战" class="headerlink" title="把威胁转化为挑战"></a>把威胁转化为挑战</h3><ul><li>为了达到最佳表现，我们必须汲取愉悦、积极的情感，享受挑战、冒险和机遇</li><li>正面情感精力的关键因素是自信、自控、人际关系与共情</li><li>负面情感也可以维持我们的生活，但相比于正面情绪代价巨大，事倍功半</li><li>在高强度压力下调动积极情感的能力是领导力的核心</li><li>利用情感肌肉支配表现，需要依靠定期锻炼和间歇恢复的平衡</li><li>任何带来享受、令人满足和安心的活动都可以作为情感的再生和恢复方式</li><li>练习耐心、共情、自信等情感肌肉的方法与锻炼二头肌或三头肌的方法相同：越过当前的极限，留出充足的恢复空间</li></ul><h3 id="保持专注和乐观"><a href="#保持专注和乐观" class="headerlink" title="保持专注和乐观"></a>保持专注和乐观</h3><ul><li>我们使用思维精力规划生活、集中精力</li><li>最有益于全情投入的思维精力是现实乐观主义——看清事物真相，却仍朝目标积极努力</li><li>优化思维精力的关键在于思想准备、构建想象、积极的自我暗示、高效的时间管理和创造力</li><li>转换思维频道可以激活不同的大脑部分，提升创造力</li><li>身体锻炼可以助长认知能力</li><li>思维消耗与恢复的平衡可以帮助思维精力达到最大</li><li>如果缺乏某种思维能力，需要系统地加以锻炼，不断突破自己的舒适区并充分休息</li><li>持续挑战大脑可以有效预防老龄化思维衰退</li></ul><h3 id="活出人生的意义"><a href="#活出人生的意义" class="headerlink" title="活出人生的意义"></a>活出人生的意义</h3><ul><li>意志精力为所有层面的行为提供动力，带来激情、恒心和投入</li><li>意志精力源于价值取向和超出个人利益的目标</li><li>品质——依照价值取向生活的勇气——是意志力量的关键因素</li><li>最强大的意志力量是激情、投入、正直和诚实</li><li>意志精力的消耗与再生密不可分</li><li>意志精力通过超越自身的目标和自我关心间的平衡得以维持</li><li>意志功课会同时消耗和产生精力</li><li>拓展意志力量与拓展体能的原理相同，都要突破我们的舒适区域</li><li>人类的意志精力甚至可以弥补严重不足的体能精力 </li></ul><h3 id="知道什么最重要才能全情投入"><a href="#知道什么最重要才能全情投入" class="headerlink" title="知道什么最重要才能全情投入"></a>知道什么最重要才能全情投入</h3><ul><li>从有记载开始，追寻使命感就是人类文明长河中必不可少的主题</li><li>“英雄之旅”需要调动、培养和更新我们最重要的资源——精力，才能协助我们完成最重要的使命</li><li>如果缺乏强烈的使命感，我们很容易迷失在生活无常的风暴里</li><li>当使命感从负面变成正面、从外部转向内部、从自我变成他人时，才能为我们提供更强大、更持久的精力</li><li>负面目标源自缺陷，且充满防备性</li><li>内部动机指的是我们对某件事物本身渴望，渴望仅仅源于其带给我们的满足感</li><li>价值观能够提供实现目标的精力它会带来精力管理标准的变革</li><li>在行动中体现的价值叫作美德</li><li>基于明确的价值观的设想蓝图可以指导我们如何投入精力</li></ul><h3 id="你的精力管理做得如何"><a href="#你的精力管理做得如何" class="headerlink" title="你的精力管理做得如何"></a>你的精力管理做得如何</h3><ul><li>面对真相能够释放精力：它发生在确立目标之后，是通往全情投入的第二阶段</li><li>逃避真相会消耗大量精力</li><li>我们会自我欺骗以保护自尊</li><li>有些真相太难以承受，无法一次性消化</li><li>不带怜悯的诚实是种残酷，对人对己均是如此</li><li>我们不愿承认自己身上具有某些品质，却仍然会不自知地表现出来</li><li>自我欺骗的常见形式是认定自己的看法就是真相，而它不过是我们解读世界的方式</li><li>面对真相需要我们保持开放的心态，承认自己被蒙蔽的可能性</li><li>过于坚持自己的一面之词是种假象，也是危险我们都是光明与暗影、美德与恶行的混合体</li><li>承认自己的局限性能帮助我们降低自我防御，增强积极精力 </li></ul><h3 id="积极仪式习惯的力量"><a href="#积极仪式习惯的力量" class="headerlink" title="积极仪式习惯的力量"></a>积极仪式习惯的力量</h3><ul><li>仪式习惯是有效的精力管理工具，可以协助我们完成任务</li><li>仪式习惯帮助我们将价值观和优先级融入生活的各个方面</li><li>所有表现卓越的人都依靠积极的仪式习惯管理精力和规范行为</li><li>个人意愿和自制力之所以有局限性，是因为每一次自控都会耗费有限的资源</li><li>我们可以通过养成自发的仪式习惯来抵消主观意愿和自制力的局限性</li><li>仪式习惯最重要的角色是确保精力消耗和更新达到有效平衡，以更好地为全情投入服务</li><li>我们面对的压力和挑战越大，越需要细致谨慎的仪式习惯</li><li>精确性和具体性是在30～60天的周期里养成习惯的关键</li><li>尽量避免做出快速消耗自制里的选择</li><li>为了确保持久的变革，我们需要养成一系列仪式习惯，一次只作一项重大改变 </li></ul><h2 id="书里面的一些图片展示一下"><a href="#书里面的一些图片展示一下" class="headerlink" title="书里面的一些图片展示一下"></a>书里面的一些图片展示一下</h2><img src="/2020/01/05/The-Power-of-Full-Engagement/000001.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000002.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000003.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000005.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000007.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000008.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000009.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000010.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000012.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000016.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000017.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000021.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000022.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000023.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000024.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000026.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000027.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000029.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000033.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000036.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000039.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000040.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000041.jpg" class=""><img src="/2020/01/05/The-Power-of-Full-Engagement/000045.jpg" class=""><h2 id="计划未完成怎么办？"><a href="#计划未完成怎么办？" class="headerlink" title="计划未完成怎么办？"></a>计划未完成怎么办？</h2><ol><li>减少工作量</li><li>根据精力，排好序，按计划执行</li></ol><p>这两天没有完成的内容，我后面会重新制作一下《俄罗斯方块》和《涂鸦跳跃》的开发视频，传到 B 站上面。</p><p>明天再仔细考虑一下 2020 年的每日计划，假期无法按时完成的处理方法。</p><p>最后附上明天的桌面背景。</p><p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-06.png" alt="2020/01/06"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-05.png&quot; alt=&quot;2020/01/05&quot;&gt;&lt;/p&gt;
&lt;p&gt;《精力管理》&lt;/p&gt;
&lt;p&gt;作者:  [美] 吉姆•洛尔&lt;br&gt;出版社: 中信出版社&lt;br&gt;译者: 付涛&lt;br&gt;出版年: 2003-12&lt;br&gt;页数: 251&lt;br&gt;定价: 25.00元&lt;br&gt;装帧: 平装&lt;br&gt;ISBN: 9787508600048&lt;/p&gt;
&lt;img src=&quot;/2020/01/05/The-Power-of-Full-Engagement/%E7%B2%BE%E5%8A%9B%E7%AE%A1%E7%90%86.jpeg&quot; class=&quot;&quot;&gt;
    
    </summary>
    
    
      <category term="plan" scheme="https://2020.iosdevlog.com/categories/plan/"/>
    
    
      <category term="plan" scheme="https://2020.iosdevlog.com/tags/plan/"/>
    
      <category term="todo" scheme="https://2020.iosdevlog.com/tags/todo/"/>
    
  </entry>
  
  <entry>
    <title>参加一个年会</title>
    <link href="https://2020.iosdevlog.com/2020/01/04/year/"/>
    <id>https://2020.iosdevlog.com/2020/01/04/year/</id>
    <published>2020-01-04T15:59:38.000Z</published>
    <updated>2020-01-05T12:54:32.162Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-04.png" alt="2020/01/04"></p><a id="more"></a><p>今天去老婆公司办点事情，晚上被邀请去参加他们公司的年会，她中了 4 等奖。</p><p>在 B 站直播了几分钟年会过程，观看人数就多的时候 7 位。</p><p>在去她们公司的路上，乘坐地铁的时候坐过了站，我对她说：“你刚才在想什么呢？”</p><p>老婆不高兴，这是两个人的事情，你又在干什么？</p><p>晚上 23:30 才到家，今天的计划都没有完成，除了 8000 步，明天继续。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-04.png&quot; alt=&quot;2020/01/04&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="party" scheme="https://2020.iosdevlog.com/categories/party/"/>
    
    
      <category term="year" scheme="https://2020.iosdevlog.com/tags/year/"/>
    
  </entry>
  
  <entry>
    <title>《时间管理（Time management）》</title>
    <link href="https://2020.iosdevlog.com/2020/01/03/Time-management/"/>
    <id>https://2020.iosdevlog.com/2020/01/03/Time-management/</id>
    <published>2020-01-03T00:49:10.000Z</published>
    <updated>2020-01-08T14:00:28.090Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-03.png" alt="2020/01/03"></p><p>今天阅读《时间管理:如何充分利用你的24小时》。</p><p>时间管理 </p><p>作者:  吉姆·兰德尔<br>出版社: 上海交通大学出版社<br>副标题: 如何充分利用你的24小时<br>原作名: The Skinng on Time Management:How to Maximize your 24-hour Gift<br>译者: 舒建广<br>出版年: 2012-1-1<br>页数: 215<br>定价: 20.00元<br>装帧: 平装<br>丛书: 简单有趣的个人管理丛书<br>ISBN: 9787313076571</p><a id="more"></a><p>少即是多。有太多的作家、思想家和研究人员倾向于使用 10 个词去表达用 5 个词就可以说明的问题。</p><p>以下评价，摘录自备受尊崇的《硅谷日报》水星新闻：</p><p>“令我感到愤愤不平的是：大多数自我提升和教育书籍作家是靠字数获得薪酬的。而事实比这更糟。大多数是靠字符数取酬的。这就意味着：你所得到的是毫无意义的冗长词汇，荒唐可笑的复合句——一页又一页，空洞无物——废话连篇。三四百页的书，用50个页码就足以表达得清清楚楚。</p><p>看了这段评论，我觉得我应该把直播的质量把控好。像昨天半个小时的时间只让 <code>Player</code> 能移动，其它的几个场景都没有介绍。</p><p>我在 <code>YouTube</code> 上看到 <a href="https://www.youtube.com/playlist?list=PLB_ibvUSN7mzUffhiay5g5GUHyJRO4DYr" target="_blank" rel="noopener">Let’s make 16 games in C++/SFML!</a>，视频基本在 2，3 分钟，里面的主要内容也都介绍了，跟着操作一遍的话，自己也可以做出可以玩的游戏了。</p><p>我觉得简明的东西最容量吸引用户，如果短时间内就可以出现可用的效果，谁会不喜欢呢？</p><p>我想把之后的直播视频，去除无用的内容，把速度加快，像 <a href="https://www.youtube.com/playlist?list=PLB_ibvUSN7mzUffhiay5g5GUHyJRO4DYr" target="_blank" rel="noopener">Let’s make 16 games in C++/SFML!</a> 这个，我把每期的内容压缩到 5 分钟以内，再上传到视频网站。</p><h2 id="第一部分-回顾：你目前是如何利用时间的"><a href="#第一部分-回顾：你目前是如何利用时间的" class="headerlink" title="第一部分 回顾：你目前是如何利用时间的"></a>第一部分 回顾：你目前是如何利用时间的</h2><ol><li>意识是时间管理的先决条件</li><li>目标提供路线图</li><li>选择是难点</li></ol><h3 id="意识是先决条件"><a href="#意识是先决条件" class="headerlink" title="意识是先决条件"></a>意识是先决条件</h3><p>自我意识至关重要的原因有三点：</p><ol><li>通过更好地意识到你如何利用时间，你可能会发现某些地方可以作调整</li><li>通过更好地了解自己如何花费时间，你就有机会找到可以利用的时间</li><li>通过对时间进行关注，通过记时间日志，你便开始把时间当作一种转瞬即逝的资产</li></ol><p>这就意味着：</p><blockquote><p>如果你不了解你是如何花费时间的，你便没有能力有效地管理你的时间。自己欺骗自己毫无意义。</p></blockquote><p>这就是为什么，自我意识是第一步！</p><h3 id="目标提供路线图"><a href="#目标提供路线图" class="headerlink" title="目标提供路线图"></a>目标提供路线图</h3><ol><li>通过对步骤和时间进行思考，你的分析能力和创造性得以调动。你开始了解为了实现自己的目标，你所需要做的事情</li><li>不管你是否意识到，你已经开始做计划了。你实际上已经开始想象目标的实现了。通过设想，可以以增强你实现目标的愿望，并强化你为实现目标而作出的努力</li><li>你正在对你的决心进行测试</li></ol><h3 id="选择是难点"><a href="#选择是难点" class="headerlink" title="选择是难点"></a>选择是难点</h3><p>时间管理在很大程度上讲就是选择。</p><blockquote><p>“别人不喜欢做的事情，成功人士也不喜欢做。尽管如此，成功人士还是去做了。”</p></blockquote><p>——E.N．格雷（E.N.Gray）《成功学研究》（The Study of Success）</p><h2 id="第二部分-让你所拥有的时间发挥最大效用"><a href="#第二部分-让你所拥有的时间发挥最大效用" class="headerlink" title="第二部分 让你所拥有的时间发挥最大效用"></a>第二部分 让你所拥有的时间发挥最大效用</h2><p>高效地利用时间</p><ol><li>你可以“创造”时间<ol><li>精力</li><li>寻找时间空隙</li><li>杜绝浪费时间</li></ol></li><li>拖延是大敌</li><li>策略和技巧<ol><li>清理头脑和生活中的杂波</li><li>规划<ol><li>计划清单的神奇魔力</li><li>确定事项优先次序的力量</li></ol></li><li>集中精力的威力</li><li>技巧</li></ol></li></ol><p>斯坦女士写过一个有名的警句：“玫瑰毕竟是玫瑰。”（“A rose is a rose is a rose.”）她的观点是：无论你把某种东西称为什么，这种东西的本质是不会改变的。</p><p>同一意思的另一种说法是：“如果一种东西走路像鸭子，游泳像鸭子，叫声像鸭子，那它一定就是一只鸭子。”</p><p>鸭子测试（英语：Duck Test）是一种归纳推理。它可以解释为：<br>如果它看起来像鸭子，游泳像鸭子，叫声像鸭子，那么它可能就是只鸭子。</p><p>这个测试表明人能够通过观察未知事物的惯常行为来识别该事物。对于事物的识别，有时候会有一些较深奥的判断、甚至有效的判断，其实与“该事物看起来像什么”不符，鸭子测试可以用来反驳。</p><p>拥有一个健康的生活方式，不仅可以使你延长寿命，还可以提高你的日常工作能力，因为当你的能量等级处于一个较高水平时，你就将你没有成效的时间转化为富有成效的时间，从而创造出了更多的时间。</p><p>一些专家甚至提出：提高效率的关键不是 <strong>时间</strong>，而是 <strong>精力</strong>。这儿有一本有关时间和精力分析的极好的著作，你可能想读一下：吉姆·罗尔（Jim Loehr）和托尼·施瓦兹（Tony Schwartz）所著《全情投入的力量：管理精力，而不是时间，是提高效能和自我更新的关键》（The Power of Full Engagement:Managing Energy, Not Time, is the Key to High Performance and Personal Renewal ）（Free出版社， 2003）</p><p>好的，明天要读的书已经有了。</p><p>伟大的时间管理者在减少时间浪费方面，都是极其出色。</p><ol><li>迅速决策——大量的时间浪费来自优柔寡断。一旦你掌握了你做决定所需要的事实，便迅速做出决定。</li><li>快速阅读——不要逐字阅读。很多作家往往使用10个字来表达5个字就能说明白的事情。要学会只读那5个字。</li><li>提高记忆能力——具有良好记忆能力的人，可以更高效地开展工作。</li></ol><h3 id="拖延：时间管理的大敌之一"><a href="#拖延：时间管理的大敌之一" class="headerlink" title="拖延：时间管理的大敌之一"></a>拖延：时间管理的大敌之一</h3><p>拖延源自一种非常强大的物理法则，人们称它为<strong>惯性</strong>。</p><p>牛顿运动定律（英语：Newton’s laws of motion）</p><ul><li>第一定律：假若施加于某物体的外力为零，则该物体的运动速度不变（惯性定律）</li></ul><p>惯性法则表明：一个静止的物体将保持静止，除非受到外力的作用。换句话说，物体——包括人——倾向于呆在原地不动。为了实现向前移动，人们需要推动自己。惯性趋向于使所有的人保持原地不动。</p><p>关于惯性，也有一些好的方面：它实际上是两种自然力量。</p><p>其一是倾向于使静止的物体保持不动，其二是使移动的物体继续移动。</p><p>这意味着：一旦你击退了想呆在原地不动的冲动，开始向前行进，这时，你将成为惯性的 <strong>受益者</strong>。这就好像有一股风在背后吹着你向前走。</p><blockquote><p>“你意识的短期记忆部分——即用于保存所有不完整的、未决的，以及无条理的‘东西’的部分——其功能就像一台个人电脑的内存。内存的容量是有限的，你所能存储在那里的‘东西’就只有这么多，而且仍要保持高效运转。大多数人的内存都超负荷运转。他们总是感到心烦意乱，他们的注意力总是受到内在心理负荷过重的影响而无法集中。”</p></blockquote><p>——大卫·艾伦（David Allen）《尽管去做：无压工作的艺术》（Getting Things Done） （企鹅出版社，2001年版）以上引文</p><p>摘录自大卫·艾伦的著作，他是美国时间管理和生产力领域最出色的思想家之一。</p><p>以下是原作者关于有效时间管理的最重要技巧的总结，摘录自大卫·艾伦的光辉著作《尽管去做：无压工作的艺术》：</p><ol><li>使你的工作区域更具有吸引力，并配备你工作所需要的一切</li><li>创建一个档案系统</li><li>创建一个清单，把你所需关注的一切事情书写或者打上去</li><li>及时处理每一项任务</li><li>在以下三个选项中给每一项工作选择一项<ol><li>立即采取行动</li><li>撇开或放弃</li><li>将其纳入以后采取进一步行动的清单</li></ol></li><li>将想法转变为行动步骤</li><li>一旦决定了行动步骤，如果可能的话，要马上采取行动</li><li>每周对你的存储和生产率系统进行检查</li><li>至少每个月一次对你的长期目标进行重温</li></ol><h3 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h3><p>也许你已听说过这个带点儿幽默的表述：预备，开火,瞄准。这很好地描述了我们当中许多人的生活状态。</p><img src="/2020/01/03/Time-management/%E8%AE%A1%E5%88%92.png" class="" title="计划"><p>你每天至少应该花 10分钟 时间，来规划你这一天该如何度过。</p><p><strong>如果你是一个夜猫子，那就在前一天晚上做好计划。</strong>如果你是一个惯于早起的人，那就在早晨进行。</p><img src="/2020/01/03/Time-management/%E6%89%A7%E8%A1%8C.png" class="" title="执行"><p>我就在每天睡觉前写好计划。</p><img src="/2020/01/03/Time-management/%E5%87%86%E5%A4%87.png" class="" title="准备"><p>如果昨天的直播，我已经准备了很长时间，可惜还是不充分。</p><h3 id="任务清单"><a href="#任务清单" class="headerlink" title="任务清单"></a>任务清单</h3><img src="/2020/01/03/Time-management/%E6%B8%85%E5%8D%95.png" class="" title="清单"><p>制作任务清单的理由有很多</p><ol><li>首先，通过强迫自己制作任务清单，你便对你的时间进行了组织</li><li>第二，制作任务清单的一个很重要的原因是这能帮你减轻压力</li><li>第三，制作任务清单需要你考虑该如何使用你的时间以及为何这样使用</li><li>第四，制作任务清单实际上可以是很有趣的</li></ol><p>很多著名的思想家都谈到过确定优先次序这一话题。原作者最喜欢的是斯蒂芬·柯维（StephenCovey），他写了一本书，叫 <strong>《高效能人士的七个习惯》（The 7 Habits of Highly EffectivePeople）</strong>。</p><p>好的，后天的书籍也已经定了。</p><blockquote><p>“马克·吐温曾经说过，如果你每天早上必须做的第一件事是吃掉一只活青蛙，那么，你这一整天都会感到满足，因为你已经知道这可能是你这一天中即将发生的最糟糕的一件事情了。</p><p>（我的）吃青蛙的原则是：如果你必须吃掉两只青蛙，那么，你要先吃较丑的那一只。</p><p>这也就是说，如果你面前有两项重要的任务要完成，那么，你要先从那个最大、最困难而且最重要的任务开始做起。要督促自己马上开始，然后一直坚持，直到任务完成，你再去做其他的事情。”</p></blockquote><p>——博恩·崔西《吃掉那只青蛙》</p><img src="/2020/01/03/Time-management/%E9%9D%92%E8%9B%99.png" class="" title="青蛙"><blockquote><p>“从最严格的意义上讲，你不应该每一天尝试去做很多的事情，你不应该试图用某种让人坐立不安的工作去填满你的每一秒钟。我花了很长时间才明白这一点。我以前很喜欢那种以工作量来计算成果的方法。其意图……在于提高个人生产率。”</p></blockquote><p>——蒂姆·费瑞斯（Tim Ferriss）《每周工作四小时》</p><img src="/2020/01/03/Time-management/%E6%95%88%E7%8E%87.png" class="" title="效率"><p>费瑞斯指出了忙碌和效率之间的重要区别。</p><p>费瑞斯指出：<strong>那些整天忙忙碌碌的人——忙完一个活动又忙另一个——事实上可能是以牺牲有效性为代价而维持其忙碌状态的。你的目标就是富有成效——即你所做的事情必须能够让你更加接近你的目标。</strong></p><p>关于忙碌的最后一个观点：<strong>在大部分人的生活中，有些时侯，忙碌不过是一个避难所。</strong> 通过使自己处于忙碌状态，我们就“找不到”空闲时间去对那些困难的抉择进行反思。例如，我们可能知道我们需要改变自己所处的状态，然而，我们却通过使自己忙碌起来，从而避免做出艰难的抉择。我知道我有时会那样做。</p><img src="/2020/01/03/Time-management/%E5%BF%99%E7%A2%8C.png" class="" title="忙碌"><h3 id="二八定律"><a href="#二八定律" class="headerlink" title="二八定律"></a>二八定律</h3><blockquote><p>你的 80% 的成就来自于你的 20% 的行为。</p></blockquote><p>二八定律是由一名叫帕累托（Pareto）的经济学家在1906年首次发现的。一天，帕累托在照料他的菜园时意识到，他的80%的可食用蔬菜只来自于约20%的植物。因此，他把更多的精力集中在照顾那些高产植物上，因而他菜园的蔬菜产量得以大幅度提高。</p><img src="/2020/01/03/Time-management/%E4%B8%93%E6%B3%A8.png" class="" title="专注"><p>减少分心</p><ol><li>远离互联网</li><li>关掉手机</li><li>关闭所有电子邮件提示</li><li>拔掉电视机插头</li><li>将一切电子产品（如视频游戏）移出工作区域</li></ol><p>排除干扰</p><ol><li>如有可能，在工作时把房门关上</li><li>如果不可能，而且周围有其他人<ol><li>戴一顶棒球帽，将帽舌下拉，表现出不友善的样子</li><li>避免同经过的人进行目光接触</li><li>戴耳机（即使什么都不播放）</li><li>把一盒面巾纸放在身边，把其中几张弄得皱巴巴的放在近旁，表明你感冒了</li></ol></li></ol><img src="/2020/01/03/Time-management/%E4%BB%BB%E5%8A%A1.png" class="" title="任务"><p>吉姆最喜欢的提高效率和时间效能的技巧：</p><ol><li>摒弃</li><li>立即做决定</li><li>创建档案系统</li><li>选择具体时间回复电话或电子邮件</li><li>使用带有秒针显示功能的手表</li><li>携带笔记本</li><li>学会浏览</li><li>寻求帮助</li><li>一次性完成任务</li><li>继续前进——做完的就做完了</li></ol><p>无论读什么书，你都不需要逐词阅读。</p><ol><li>只读每一个段落的第一个句子</li><li>阅读所有黑体字、下划线或斜体字部分</li><li>只读有关内容介绍和总结的段落或章节</li><li>纵向浏览，而不是横向阅读</li><li>读书时不要不出声地读（尽量做到这一点）</li><li>一次读完一页或几段，不重读，除非你确信漏掉了什么。</li></ol><p>帕金森法则说明：<strong>完成一项工作的时间会膨胀到你所拥有时间的极限。</strong></p><p>如果你有 3 个小时去完成一个项目，那么，你将在 3 个小时内完成它。如果你有一个星期时间，那么它将会用去你一星期，而且很有可能，你所完成的产品也不见得就比 3 小时完成的产品更好。</p><h3 id="有关时间管理需要记住的十个最重要的观点"><a href="#有关时间管理需要记住的十个最重要的观点" class="headerlink" title="有关时间管理需要记住的十个最重要的观点"></a>有关时间管理需要记住的十个最重要的观点</h3><ol><li>自我意识是先决条件</li><li>目标设定是第一步</li><li>选择是艰难的</li><li>你可以“创造”时间</li><li>拖延是大敌</li><li>要有一颗“似水之心”</li><li>计划和准备是值得花精力去做的</li><li>通过确定优先次序，你可以做到去芜存精</li><li>专心致志是问题的关键所在</li><li>选择对你来说行之有效的时间管理技巧</li></ol><h3 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h3><p>看了这本书后，待办清单是一定写提前写好，我在 <strong>2020</strong> 年中每天 <strong>00:00</strong> 前完成第二天的 <em>Todo-list</em>，程序员想早起估计是不太可能。</p><p>下一步是排顺序，<code>iOS</code> 端的 <code>ts</code> 转 <code>mp4</code> 应该是重要的事情。急不急呢？客户一天催 3 遍。</p><p>为什么要做 <code>ts</code> 转 <code>mp4</code> 的事情？用户想要在 <code>相册</code> 分享视频。</p><p><code>Android</code> 端可以把视频保存到 <code>相册</code>，其中视频中带有 <code>GPS</code> 信息。</p><p><code>iOS</code> 端 <code>相册</code> 是不支持 <code>ts</code> 格式的视频，如果想要放到存到相册分享，只能转成 <code>iOS</code> 支持的格式，就选最通用的 <code>mp4</code> 格式。</p><p>在 <code>Google</code>，<code>GitHub</code>，<code>StackOverflow</code> 上面搜索 <code>iOS convert ts mp4</code>，找到 <code>FFmpegWrapper</code>。</p><p><a href="https://stackoverflow.com/questions/25988773/" target="_blank" rel="noopener">How to convert .mp4 file to .ts using ffmpeg in iOS</a></p><p>看 <code>GitHub</code> 主页看了一下，<code>6</code> 年前的项目，目前已经不可用。</p><p><a href="https://github.com/OpenWatch/FFmpegWrapper" target="_blank" rel="noopener">https://github.com/OpenWatch/FFmpegWrapper</a></p><p><code>pod</code> 搜索一下 <code>FFmpegWrapper</code></p><p><code>pod search FFmpegWrapper</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-&gt; FFmpegWrapper (1.0)</span><br><span class="line">   A lightweight Objective-C wrapper for some FFmpeg libav functions</span><br><span class="line">   pod &#39;FFmpegWrapper&#39;, &#39;~&gt; 1.0&#39;</span><br><span class="line">   - Homepage: https:&#x2F;&#x2F;github.com&#x2F;OpenWatch&#x2F;FFmpegWrapper</span><br><span class="line">   - Source:   https:&#x2F;&#x2F;github.com&#x2F;OpenWatch&#x2F;FFmpegWrapper.git</span><br><span class="line">   - Versions: 1.0 [trunk repo]</span><br><span class="line"></span><br><span class="line">-&gt; FFmpegWrapper-up-to-date (1.2)</span><br><span class="line">   A lightweight Objective-C wrapper for some FFmpeg libav functions</span><br><span class="line">   pod &#39;FFmpegWrapper-up-to-date&#39;, &#39;~&gt; 1.2&#39;</span><br><span class="line">   - Homepage: https:&#x2F;&#x2F;github.com&#x2F;Arlem&#x2F;FFmpegWrapper</span><br><span class="line">   - Source:   https:&#x2F;&#x2F;github.com&#x2F;Arlem&#x2F;FFmpegWrapper.git</span><br><span class="line">   - Versions: 1.2, 1.1 [trunk repo]</span><br><span class="line">(END)</span><br></pre></td></tr></table></figure><p>打开 <code>FFmpegWrapper-up-to-date (1.2)</code> Homepage，最后 <code>commit</code> 时间在 <code>4</code> 年前，碰磁运气吧。</p><p>测试了一下， <code>signal SIGABRT</code>。</p><p>后面又找到了 <a href="https://github.com/tanersener/mobile-ffmpeg" target="_blank" rel="noopener">tanersener/mobile-ffmpeg</a>。</p><p>GitHub README &amp; WIKI:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod <span class="string">'mobile-ffmpeg-full'</span>, <span class="string">'~&gt; 4.3'</span></span><br></pre></td></tr></table></figure><p>网站：<a href="https://tanersener.github.io/mobile-ffmpeg/" target="_blank" rel="noopener">https://tanersener.github.io/mobile-ffmpeg/</a></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod <span class="string">'mobile-ffmpeg-min'</span>, <span class="string">'~&gt; 4.3'</span></span><br></pre></td></tr></table></figure><p>我先安装全的吧。</p><p>测试了一下，可以转换，收工。</p><p>晚上 <strong>20:00</strong> 直播 <code>Dodge the Creeps!(Godot)</code> 的官文文档里面的第一个 <code>2D</code> 游戏，前几分钟 <code>OBS</code> 断开了，录制到 <strong>21:44</strong> 分结束，大概录了一个半小时。</p><p>这还是根据文档敲的代码，其中有两处拼写错误，<code>Start Game</code> 没有连接，文档后面有讲到用代码连接，我没有看后面的文档，自己调了不少时间，通过搜索代码，发现只有一个 <code>StartGame</code>，估计是代码和 <code>UI</code> 上的 <code>Button</code> 没有关联。</p><p>明天直播估计晚上 <strong>20:00</strong>，这次把关键信息做成图（思维导图或者流程图之类）。</p><p>最后附上明天的桌面背景。</p><p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-04.png" alt="2020/01/04"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-03.png&quot; alt=&quot;2020/01/03&quot;&gt;&lt;/p&gt;
&lt;p&gt;今天阅读《时间管理:如何充分利用你的24小时》。&lt;/p&gt;
&lt;p&gt;时间管理 &lt;/p&gt;
&lt;p&gt;作者:  吉姆·兰德尔&lt;br&gt;出版社: 上海交通大学出版社&lt;br&gt;副标题: 如何充分利用你的24小时&lt;br&gt;原作名: The Skinng on Time Management:How to Maximize your 24-hour Gift&lt;br&gt;译者: 舒建广&lt;br&gt;出版年: 2012-1-1&lt;br&gt;页数: 215&lt;br&gt;定价: 20.00元&lt;br&gt;装帧: 平装&lt;br&gt;丛书: 简单有趣的个人管理丛书&lt;br&gt;ISBN: 9787313076571&lt;/p&gt;
    
    </summary>
    
    
      <category term="自我提升" scheme="https://2020.iosdevlog.com/categories/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/"/>
    
    
      <category term="读书" scheme="https://2020.iosdevlog.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>Coin Dash 未完待续</title>
    <link href="https://2020.iosdevlog.com/2020/01/02/coin-dash/"/>
    <id>https://2020.iosdevlog.com/2020/01/02/coin-dash/</id>
    <published>2020-01-02T14:35:10.000Z</published>
    <updated>2020-01-03T02:26:55.596Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-02.png" alt="2020/01/02"></p><a id="more"></a><h2 id="小武小久成长记"><a href="#小武小久成长记" class="headerlink" title="小武小久成长记"></a>小武小久成长记</h2><p>早上和小久一起听儿歌，小武放学后送他去学画画，之后我去理发。</p><p>小武今天画的是荷花，晚上与小武一块学辅音字母 <em>B</em>。</p><h2 id="自我提升"><a href="#自我提升" class="headerlink" title="自我提升"></a>自我提升</h2><p>《产品游戏化》</p><p>5 步达到产品与市场匹配</p><p>这本书的5个部分包含了游戏化思维的5个步骤。</p><ul><li>步骤1：设想通过明确你的产品创意来进行更聪明的实验，识别出你的高风险设想。</li><li>步骤2：共情找到早期核心用户，他们对你的产品创意有热情，能够帮助你测试设想。</li><li>步骤3：设计画出通往精通的路径图，也要画出把你的用户从菜鸟变成专家的学习进阶路径。</li><li>步骤4：试玩用超级粉丝的意见给你的创意画出原型，然后进行高价值的试玩，来证实你的设想。</li><li>步骤5：反馈总结你所学习的知识和你获取知识的方式，以及基于数据的下一步计划。</li></ul><p>你将会学到你可以从这本书学到三点，它们可以立刻运用到你的项目中。</p><ol><li>在设计爆款产品时，游戏化思维扮演怎样的角色。</li><li>将游戏化思维运用到你的产品中，如何帮助你打造长期的用户黏性，并且增加你成功的概率。</li><li>游戏化思维工具是一种已经被证实的步步为营的系统，它如何能够帮助你从创新工作中获得更好的可靠结果。</li></ol><img src="/2020/01/02/coin-dash/%E8%B7%A8%E8%B6%8A%E9%B8%BF%E6%B2%9F.png" class="" title="OBS 跨越鸿沟"><p>用精练的语言总结一下：</p><blockquote><p>如果你在创新，在瞄准一个更大的市场之前，你先得找到并且点亮一个较小的早期市场。你可以先在较少的一群人当中实验你的想法，这群人需要你提供的产品，并且他们在满足自身需求时，能够承担产品所带来的成本，忍受产品中存在的荒谬搞笑的东西，以及所带来的不适感。当你这么做时，你成功的概率也在上升。</p></blockquote><h2 id="游戏开发直播"><a href="#游戏开发直播" class="headerlink" title="游戏开发直播"></a>游戏开发直播</h2><p>今天晚上 18:00 在 B站 直播了半个小时，选的游戏是 <strong>Coin Dash</strong> (金币冲冲冲/金币狂奔)，使用 <code>C#</code> 开发。</p><p>边介绍 Godot，边操作，半个小时的时间才能 <code>Player</code> 能进行上下左右的移动再加上动画的功能。</p><p>我开播后几分钟想起来要录屏，再把 B站 测试的视频补上，后面再一同传到 B站上面。就是不清楚是 1 个总列表，还是分 12 个月的播放列表，或者直接上传 366 个视频。</p><p><strong>Coin Dash</strong> 这个小游戏和 Godot 官网上面的第一个游戏 <strong>Godge The Greeps!</strong> 非常类似。 <strong>Godge The Greeps!</strong> 我在去年年底（前几天）按照文档（有中文文档）做过一遍，游戏在整理磁盘的时候被我删除了，也没有上传到 <code>GitHub</code> 上面，郁闷！</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>有 Todo-list 后明显觉得有些事情更有动力做。比如我不太想打羽毛球了，看了待办事项还是去完成。</p><p>本来想着 18:00 要直播，不想在送小武的时候理发，想直播之后再去，看了 Todo-list 后还是完成理发再说。</p><p>最后就是直播，估计也没有什么人看。应该讲的没有完全讲清楚，条理不清。直播的时候还出现了不一致的地方，来回做了 3 遍还是不对。</p><p>后来代码就直接从 GitHub 参照之前写好的，复制下来介绍一下具体内容，还没有真刀实枪的写。</p><p>问题不少，明天还是参照 Godot 的第一个游戏 <strong>Godge The Greeps!</strong> 直播吧，时间写在 20:00，因为下午我可能有事要出动。</p><p>最后附上明天的桌面背景。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-02.png&quot; alt=&quot;2020/01/02&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="game" scheme="https://2020.iosdevlog.com/categories/game/"/>
    
    
      <category term="Godot" scheme="https://2020.iosdevlog.com/tags/Godot/"/>
    
  </entry>
  
  <entry>
    <title>B 站直播</title>
    <link href="https://2020.iosdevlog.com/2020/01/01/bilibili-live/"/>
    <id>https://2020.iosdevlog.com/2020/01/01/bilibili-live/</id>
    <published>2020-01-01T02:38:04.000Z</published>
    <updated>2020-01-03T02:27:21.638Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-01.png" alt="2020/01/01"></p><a id="more"></a><p>bilibili 直播帮助: <a href="https://live.bilibili.com/help" target="_blank" rel="noopener">https://live.bilibili.com/help</a></p><h2 id="实名认证"><a href="#实名认证" class="headerlink" title="实名认证"></a>实名认证</h2><ol><li>需要绑定手机并经过实名认证才能获得直播权限，实名认证时需要上传您本人的身份证反面照片+手持身份证照片。<br>点此前去进行实名认证</li><li>已完成实名认证的用户，请登录直播页面点击【我要直播】按钮根据提示完成开通直播的申请，提交后请等待审核通过。<br>(一般会在48小时之内完成审核)</li><li>通过审核之后再次点击【我要直播】按钮，可进入自己的直播间再次编辑直播间信息。</li></ol><h2 id="填写直播间信息"><a href="#填写直播间信息" class="headerlink" title="填写直播间信息"></a>填写直播间信息</h2><ol><li>开启开播前请填写您的直播间标题，长度限制为20个汉字。</li><li>请根据您直播的内容正确选择分区，此项为必填。恶意切换分区（例如直播的是电子竞技游戏，却切换到绘画分区），30天内将不能更改直播分区。</li><li>主播等级达到1级可以上传自定义封面，20级可以上传自定义房间背景图。</li></ol><h2 id="开启直播"><a href="#开启直播" class="headerlink" title="开启直播"></a>开启直播</h2><p>OBS （Open Broadcaster Software）: <a href="https://obsproject.com" target="_blank" rel="noopener">https://obsproject.com</a></p><p>打开 OBS 后，可以看到 Audio 已经可以正常使用了。</p><img src="/2020/01/01/bilibili-live/OBS.png" class="" title="OBS 主界面"><p>菜单 &gt; 工具 &gt; 自动配置向导</p><img src="/2020/01/01/bilibili-live/Wizard.png" class="" title="自动配置向导 (Wizard)"><img src="/2020/01/01/bilibili-live/Display_Capture.png" class="" title="添加 显示捕获(Display Capture)"><img src="/2020/01/01/bilibili-live/Resize.png" class="" title="调整输出大小到源大小 Resize"><p>OBS 请点击直播网页上的【我要直播】按钮来到自己的直播间页面；点击播放器右上角的【开启直播】开关，把你在对话框里看到的 rtmp 地址和直播码，填写到 OBS 的设置&gt;&gt;广播设定 中，然后点击【开始串联】即可正常开播。</p><p>直播地址：<a href="https://live.bilibili.com/4311135" target="_blank" rel="noopener">https://live.bilibili.com/4311135</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GameDevLog/2020/master/2020/01/2020-01-01.png&quot; alt=&quot;2020/01/01&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="准备" scheme="https://2020.iosdevlog.com/categories/%E5%87%86%E5%A4%87/"/>
    
    
      <category term="直播" scheme="https://2020.iosdevlog.com/tags/%E7%9B%B4%E6%92%AD/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://2020.iosdevlog.com/2020/01/01/hello-world/"/>
    <id>https://2020.iosdevlog.com/2020/01/01/hello-world/</id>
    <published>2020-01-01T01:52:45.000Z</published>
    <updated>2020-01-02T02:01:10.942Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
